%!PS-Adobe-2.0 EPSF-2.0
%%Title: topoverv_may23.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Fri May 25 19:12:24 2001
%%For: xiaochao@jlabs1 (Xiaochao Zheng)
%%Orientation: Portrait
%%BoundingBox: 0 0 727 530
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.2000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-107.0 644.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

% bricks
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 16 true [ 16 0 0 -16 0 16 ]
	{<008000800080008000800080
	 0080ffff8000800080008000
	 800080008000ffff>}
        imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P7 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 9937 m -1000 -1000 l 12572 -1000 l 12572 9937 l cp clip
 0.07200 0.07200 sc
% Polyline
15.000 slw
n 6150 6975 m 6450 6975 l 6675 6750 l 6375 6750 l 6150 6975 l  cp gs /PC [[1.00 1.00 1.00] [0.00 1.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 410.00 450.00] PATmp PATsp ef gr PATusp gs col2 s gr 
% Polyline
n 6800 6650 m 3300 6700 l gs col4 s gr 
% Polyline
n 6675 6420 m 6540 6525 l 6925 6525 l 7020 6420 l 6675 6420 l  cp gs /PC [[1.00 1.00 1.00] [0.00 1.00 0.00]] def
15.00 15.00 sc P7 [16 0 0 16 436.00 428.00] PATmp PATsp ef gr PATusp gs col2 s gr 
/Helvetica-Bold ff 210.00 scf sf
4575 4875 m
gs 1 -1 sc (Detectors) col0 sh gr
% Polyline
n 7500 6075 m 8550 6075 l 8550 7650 l 7500 7650 l cp gs col0 s gr 
% Polyline
7.500 slw
 [120] 0 sd
n 7575 6150 m 8475 6150 l 8475 6975 l 7575 6975 l cp gs col0 s gr  [] 0 sd
/Helvetica-Bold ff 165.00 scf sf
7575 7575 m
gs 1 -1 sc (Optics table) col0 sh gr
% Polyline
15.000 slw
n 10725 7800 m 11250 7800 l 11250 8100 l 10725 8100 l cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P5 [16 0 0 -16 715.00 520.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 10050 7800 m 10800 7800 l gs col5 s gr 
/Helvetica-Bold ff 210.00 scf sf
4800 4575 m
gs 1 -1 sc (HRS) col0 sh gr
% Polyline
7.500 slw
 [120] 0 sd
n 10125 8475 m 10125 8474 l 10123 8470 l 10120 8461 l 10115 8445 l 10109 8424 l
 10102 8401 l 10094 8377 l 10088 8354 l 10082 8333 l 10076 8313 l
 10072 8296 l 10068 8280 l 10065 8265 l 10063 8250 l 10060 8235 l
 10058 8220 l 10057 8204 l 10055 8187 l 10054 8167 l 10053 8146 l
 10052 8123 l 10051 8099 l 10051 8076 l 10050 8055 l 10050 8039 l
 10050 8030 l 10050 8026 l 10050 8025 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
n 10725 8100 m 10050 8100 l gs col5 s gr 
7.500 slw
 [150 68 15 50 15 68] 0 sd
% Ellipse
n 3300 6525 1489 1489 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Polyline
 [150 68 15 50 15 68] 0 sd
n 1500 7575 m 1500 6450 l gs col0 s gr  [] 0 sd
% Polyline
 [150 68 15 50 15 68] 0 sd
n 1500 7575 m 2175 8250 l 3300 8250 l gs col0 s gr  [] 0 sd
% Polyline
n 10650 6750 m 11250 6750 l gs col5 s gr 
% Polyline
 [150 68 15 50 15 68] 0 sd
n 4800 7875 m 6975 5700 l 8075 4025 l gs col0 s gr  [] 0 sd
% Polyline
n 5475 3075 m 5100 3675 l 6000 4575 l 6600 4200 l gs col0 s gr 
% Polyline
n 3900 5175 m 4575 5850 l 5925 4650 l 5000 3750 l 3900 5175 l  cp gs col0 s gr 
/Helvetica-Bold ff 180.00 scf sf
6900 6900 m
gs 1 -1 sc (lasers) col4 sh gr
% Polyline
 [150 68 15 50 15 68] 0 sd
n 1875 5025 m 4050 2850 l 5900 1600 l gs col0 s gr  [] 0 sd
% Polyline
15.000 slw
n 9825 6675 m 10575 6675 l 10575 7425 l 9825 7425 l cp gs col0 s gr 
% Polyline
n 7575 5625 m 7575 5925 l 9525 5925 l 9525 5775 l 9900 5775 l 9900 5625 l
 7575 5625 l  cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P4 [16 0 0 -16 505.00 375.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 10050 8025 m 10725 8025 l gs col2 s gr 
% Polyline
n 6675 6375 m 7125 6375 l 7575 5925 l 7575 5625 l 7425 5625 l 6675 6375 l  cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P5 [16 0 0 -16 445.00 375.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 9525 5775 m 9525 5925 l 11550 5925 l 11550 5625 l 9900 5625 l 9900 5775 l
 9525 5775 l  cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P5 [16 0 0 -16 635.00 375.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 11250 5925 m 11550 5925 l 11550 8100 l 11250 8100 l cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P4 [16 0 0 -16 750.00 395.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 9750 5925 m 9750 7200 l gs col5 s gr 
% Polyline
n 9750 6600 m 10650 6600 l 10650 7125 l 11250 7125 l gs col5 s gr 
% Polyline
7.500 slw
n 9975 5925 m 9975 6600 l gs col5 s gr 
% Polyline
n 10200 5925 m 10200 6600 l gs col5 s gr 
% Polyline
n 10425 5925 m 10425 6600 l gs col5 s gr 
% Polyline
n 10650 5925 m 10650 6600 l gs col5 s gr 
% Polyline
n 11250 6600 m 10575 6600 l gs col5 s gr 
/Helvetica-Bold ff 180.00 scf sf
7650 6600 m
gs 1 -1 sc (Optics) col0 sh gr
% Polyline
n 10650 6975 m 11250 6975 l gs col5 s gr 
% Polyline
15.000 slw
n 10725 8100 m 10125 8475 l 10200 8550 l 10725 8175 l 10725 8100 l  cp gs col2 s gr 
% Polyline
n 9150 8400 m 9375 8400 l 9375 8625 l 9150 8625 l cp gs col5 s gr 
% Polyline
n 9750 7200 m 9750 8400 l 10050 8400 l 10050 7500 l 9750 7500 l gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P4 [16 0 0 -16 650.00 480.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 6150 7050 m 6150 8400 l 6450 8400 l 6450 7050 l 6150 7050 l  cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P4 [16 0 0 -16 410.00 470.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 6500 8100 m 9750 8100 l 9750 8400 l 6500 8400 l cp gs /PC [[1.00 1.00 1.00] [1.00 0.00 1.00]] def
15.00 15.00 sc P5 [16 0 0 -16 433.33 540.00] PATmp PATsp ef gr PATusp gs col5 s gr 
% Polyline
n 6750 6750 m 6500 7000 l gs col5 s gr 
/Helvetica-Bold ff 180.00 scf sf
4950 6525 m
gs 1 -1 sc (light tubes) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
9900 7125 m
gs 1 -1 sc (laser) col0 sh gr
% Polyline
gs  clippath
6877 6695 m 6697 6650 l 6877 6605 l 6645 6605 l 6645 6695 l cp
clip
n 7650 6650 m 6675 6650 l gs col4 s gr gr

% arrowhead
7.500 slw
n 6877 6695 m 6697 6650 l 6877 6605 l 6847 6650 l 6877 6695 l  cp gs col4 1.00 shd ef gr  col4 s
/Helvetica-Bold ff 150.00 scf sf
9900 6900 m
gs 1 -1 sc (Rack for) col0 sh gr
/Helvetica-Bold ff 210.00 scf sf
2775 7575 m
gs 1 -1 sc (Target) col0 sh gr
/Helvetica-Bold ff 150.00 scf sf
9900 7350 m
gs 1 -1 sc (controllers) col0 sh gr
/Helvetica-Bold ff 210.00 scf sf
6450 3225 m
gs 1 -1 sc  45.0 rot (45 deg) col0 sh gr
/Helvetica-Bold ff 210.00 scf sf
3375 8850 m
gs 1 -1 sc (Beam Line) col0 sh gr
/Helvetica-Bold ff 210.00 scf sf
8325 5400 m
gs 1 -1 sc (Laser hut) col0 sh gr
% Polyline
15.000 slw
n 7125 6375 m 6975 6525 l gs col5 s gr 
/Helvetica-Bold ff 180.00 scf sf
2625 5400 m
gs 1 -1 sc (target pivot) col0 sh gr
% Polyline
7.500 slw
 [150 68 15 50 15 68] 0 sd
n 1500 6450 m 1500 6448 l 1500 6442 l 1500 6432 l 1500 6417 l 1501 6396 l
 1501 6369 l 1502 6336 l 1503 6297 l 1504 6255 l 1505 6209 l
 1506 6160 l 1507 6111 l 1509 6061 l 1511 6012 l 1513 5964 l
 1515 5918 l 1517 5874 l 1519 5833 l 1522 5794 l 1525 5758 l
 1528 5723 l 1531 5691 l 1535 5661 l 1538 5633 l 1543 5607 l
 1547 5582 l 1552 5558 l 1557 5535 l 1563 5513 l 1570 5486 l
 1578 5460 l 1587 5435 l 1597 5411 l 1608 5386 l 1620 5362 l
 1634 5338 l 1649 5313 l 1665 5288 l 1683 5262 l 1702 5235 l
 1722 5208 l 1744 5181 l 1765 5154 l 1786 5128 l 1807 5104 l
 1825 5082 l 1841 5063 l 1854 5049 l 1863 5038 l 1870 5031 l
 1873 5027 l 1875 5025 l gs col0 s gr  [] 0 sd
% Polyline
 [150 68 15 50 15 68] 0 sd
n 3375 8250 m 3377 8250 l 3383 8250 l 3393 8250 l 3408 8250 l 3429 8249 l
 3456 8249 l 3489 8248 l 3528 8247 l 3570 8246 l 3616 8245 l
 3665 8244 l 3714 8243 l 3764 8241 l 3813 8239 l 3861 8237 l
 3907 8235 l 3951 8233 l 3992 8231 l 4031 8228 l 4067 8225 l
 4102 8222 l 4134 8219 l 4164 8215 l 4192 8212 l 4218 8207 l
 4243 8203 l 4267 8198 l 4290 8193 l 4313 8188 l 4339 8180 l
 4365 8172 l 4390 8163 l 4414 8153 l 4439 8142 l 4463 8130 l
 4487 8116 l 4512 8101 l 4537 8085 l 4563 8067 l 4590 8048 l
 4617 8028 l 4644 8006 l 4671 7985 l 4697 7964 l 4721 7943 l
 4743 7925 l 4762 7909 l 4776 7896 l 4787 7887 l 4794 7880 l
 4798 7877 l 4800 7875 l gs col0 s gr  [] 0 sd
% Ellipse
n 3300 6550 639 639 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col2 s gr

% Polyline
n 2675 5925 m 3925 5925 l 3925 7175 l 2675 7175 l cp gs col7 1.00 shd ef gr gs col5 s gr 
% Ellipse
n 3300 6565 503 503 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col10 s gr

% Polyline
n 3650 5850 m 3725 5850 l 3725 7275 l 3650 7275 l cp gs col7 1.00 shd ef gr gs col6 s gr 
% Polyline
n 2900 5850 m 2975 5850 l 2975 7275 l 2900 7275 l cp gs col7 1.00 shd ef gr gs col6 s gr 
% Ellipse
n 3310 6560 424 424 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col6 s gr

% Polyline
n 2525 6975 m 4100 6975 l 4100 7050 l 2525 7050 l cp gs col7 1.00 shd ef gr gs col5 s gr 
% Polyline
n 2525 6075 m 4100 6075 l 4100 6150 l 2525 6150 l cp gs col7 1.00 shd ef gr gs col5 s gr 
% Polyline
15.000 slw
n 3125 6300 m 3500 6300 l 3500 6825 l 3125 6825 l cp gs col7 1.00 shd ef gr gs col5 s gr 
% Polyline
7.500 slw
n 7000 6550 m 3400 6675 l 3400 6600 l 3350 6600 l 3350 6750 l 3400 6750 l
 6900 6725 l gs col5 s gr 
% Polyline
n 3300 1600 m 3300 8925 l gs col5 s gr 
% Polyline
 [150 68 15 50 15 68] 0 sd
n 1875 5025 m 4800 7950 l gs col0 s gr  [] 0 sd
% Polyline
 [150 68 15 50 15 68] 0 sd
n 1500 8250 m 6600 3150 l gs col0 s gr  [] 0 sd
$F2psEnd
rs
end
