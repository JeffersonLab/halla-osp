%!PS-Adobe-2.0
%%Title: wire-change.ps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Thu May 27 19:28:56 1999
%%For: vernin@phns146 (P Vernin)
%%Orientation: Portrait
%%BoundingBox: 22 106 573 736
%%Pages: 1
%%BeginSetup
%%IncludeFeature: *PageSize A4
%%EndSetup
%%Magnification: 0.8809
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-15.0 778.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 13103 m -1000 -1000 l 11587 -1000 l 11587 13103 l cp clip
 0.05549 0.05549 sc
%%Page: 1 1
% Polyline
30.000 slw
n 2070 8104 m 2070 8554 l gs col0 s gr 
% Polyline
7.500 slw
n 2025 8682 m 2115 8682 l 2115 8922 l 2025 8922 l cp gs col0 s gr 
% Polyline
n 2017 8547 m 2017 8546 l 2016 8540 l 2014 8529 l 2013 8516 l 2012 8503 l
 2012 8494 l 2013 8486 l 2015 8480 l 2018 8474 l 2022 8468 l
 2028 8464 l 2035 8459 l 2042 8456 l 2050 8454 l 2058 8452 l
 2065 8452 l 2073 8452 l 2082 8454 l 2090 8456 l 2099 8459 l
 2107 8463 l 2115 8467 l 2121 8472 l 2126 8477 l 2130 8484 l
 2134 8493 l 2136 8503 l 2137 8513 l 2136 8523 l 2136 8532 l
 2134 8541 l 2132 8551 l 2129 8561 l 2125 8570 l 2121 8578 l
 2116 8585 l 2109 8590 l 2102 8595 l 2094 8600 l 2086 8605 l
 2079 8611 l 2074 8617 l 2072 8623 l 2070 8630 l 2069 8639 l
 2069 8651 l 2069 8664 l 2070 8675 l 2070 8681 l 2070 8682 l gs col0 s gr 
% Polyline
30.000 slw
n 5212 7136 m 5212 7586 l gs col0 s gr 
% Polyline
7.500 slw
n 5167 7714 m 5257 7714 l 5257 7954 l 5167 7954 l cp gs col0 s gr 
% Polyline
n 5159 7579 m 5159 7578 l 5158 7572 l 5156 7561 l 5155 7548 l 5154 7535 l
 5154 7526 l 5155 7518 l 5157 7512 l 5160 7506 l 5164 7500 l
 5170 7496 l 5177 7491 l 5184 7488 l 5192 7486 l 5200 7484 l
 5207 7484 l 5215 7484 l 5224 7486 l 5232 7488 l 5241 7491 l
 5249 7495 l 5257 7499 l 5263 7504 l 5268 7509 l 5272 7516 l
 5276 7525 l 5278 7535 l 5279 7545 l 5278 7555 l 5278 7564 l
 5276 7573 l 5274 7583 l 5271 7593 l 5267 7602 l 5263 7610 l
 5258 7617 l 5251 7622 l 5244 7627 l 5236 7632 l 5228 7637 l
 5221 7643 l 5216 7649 l 5214 7655 l 5212 7662 l 5211 7671 l
 5211 7683 l 5211 7696 l 5212 7707 l 5212 7713 l 5212 7714 l gs col0 s gr 
% Polyline
30.000 slw
n 9577 4969 m 9577 5419 l gs col0 s gr 
% Polyline
7.500 slw
n 9532 5547 m 9622 5547 l 9622 5787 l 9532 5787 l cp gs col0 s gr 
% Polyline
n 9524 5412 m 9524 5411 l 9523 5405 l 9521 5394 l 9520 5381 l 9519 5368 l
 9519 5359 l 9520 5351 l 9522 5345 l 9525 5339 l 9529 5333 l
 9535 5329 l 9542 5324 l 9549 5321 l 9557 5319 l 9565 5317 l
 9572 5317 l 9580 5317 l 9589 5319 l 9597 5321 l 9606 5324 l
 9614 5328 l 9622 5332 l 9628 5337 l 9633 5342 l 9637 5349 l
 9641 5358 l 9643 5368 l 9644 5378 l 9643 5388 l 9643 5397 l
 9641 5406 l 9639 5416 l 9636 5426 l 9632 5435 l 9628 5443 l
 9623 5450 l 9616 5455 l 9609 5460 l 9601 5465 l 9593 5470 l
 9586 5476 l 9581 5482 l 9579 5488 l 9577 5495 l 9576 5504 l
 9576 5516 l 9576 5529 l 9577 5540 l 9577 5546 l 9577 5547 l gs col0 s gr 
% Arc
gs  clippath
7922 5507 m 7969 5621 l 7874 5543 l 7971 5673 l 8019 5637 l cp
clip
n 8334.0 5286.3 498.3 177.8 134.3 arcn
gs col0 s gr
 gr

% arrowhead
n 7922 5507 m 7969 5621 l 7874 5543 l  col0 s
% Polyline
n 7836 5313 m 8279 5313 l 7978 5628 l gs col0 s gr 
% Arc
gs  clippath
10199 5212 m 10322 5221 l 10209 5271 l 10369 5244 l 10359 5185 l cp
clip
n 10348.8 5664.3 447.3 134.7 -90.0 arc
gs col0 s gr
 gr

% arrowhead
n 10199 5212 m 10322 5221 l 10209 5271 l  col0 s
% Polyline
n 10041 5982 m 10356 5652 l 10356 5225 l gs col0 s gr 
% Polyline
30.000 slw
n 7290 6162 m 7290 6612 l gs col0 s gr 
% Polyline
7.500 slw
n 7245 6740 m 7335 6740 l 7335 6980 l 7245 6980 l cp gs col0 s gr 
% Polyline
n 7237 6605 m 7237 6604 l 7236 6598 l 7234 6587 l 7233 6574 l 7232 6561 l
 7232 6552 l 7233 6544 l 7235 6538 l 7238 6532 l 7242 6526 l
 7248 6522 l 7255 6517 l 7262 6514 l 7270 6512 l 7278 6510 l
 7285 6510 l 7293 6510 l 7302 6512 l 7310 6514 l 7319 6517 l
 7327 6521 l 7335 6525 l 7341 6530 l 7346 6535 l 7350 6542 l
 7354 6551 l 7356 6561 l 7357 6571 l 7356 6581 l 7356 6590 l
 7354 6599 l 7352 6609 l 7349 6619 l 7345 6628 l 7341 6636 l
 7336 6643 l 7329 6648 l 7322 6653 l 7314 6658 l 7306 6663 l
 7299 6669 l 7294 6675 l 7292 6681 l 7290 6688 l 7289 6697 l
 7289 6709 l 7289 6722 l 7290 6733 l 7290 6739 l 7290 6740 l gs col0 s gr 
% Arc
gs n 10012.5 2471.5 337.6 178.7 1.3 arc
gs col0 s gr
 gr

% Arc
gs n 10012.5 4286.5 337.6 -178.7 -1.3 arcn
gs col0 s gr
 gr

% Arc
gs  clippath
3810 5430 m 3780 5550 l 3750 5430 l 3750 5592 l 3810 5592 l cp
clip
n 4218.0 5502.5 444.3 -86.5 170.3 arcn
gs col0 s gr
 gr

% arrowhead
n 3810 5430 m 3780 5550 l 3750 5430 l  col0 s
% Arc
gs n 1687.5 2471.5 337.6 178.7 1.3 arc
gs col0 s gr
 gr

% Arc
gs n 1687.5 4286.5 337.6 -178.7 -1.3 arcn
gs col0 s gr
 gr

% Arc
gs n 3585.5 3485.0 337.1 88.7 -88.7 arc
gs col0 s gr
 gr

% Arc
gs n 5400.5 3485.0 337.1 91.3 -91.3 arcn
gs col0 s gr
 gr

% Arc
gs n 7064.0 3906.0 338.1 43.8 -134.0 arc
gs col0 s gr
 gr

% Arc
gs n 8346.0 2624.0 338.1 46.2 -136.2 arcn
gs col0 s gr
 gr

% Ellipse
n 10342 1893 44 44 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 686.53 123.27]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9675 4054 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 642.47 267.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 10342 4061 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 686.93 268.20]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9667 3829 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 641.93 252.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2017 1893 44 44 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 131.53 123.27]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1350 4054 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 87.47 267.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2017 4061 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 131.93 268.20]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1342 3829 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 86.93 252.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 1342 2479 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 86.93 162.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 2017 3154 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 131.93 207.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Rotated Ellipse
gs
3007 3155 tr
-90.000 rot
n 0 0 44 44 0 360 DrawEllipse 90.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 197.53 207.40]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
5168 3822 tr
-90.000 rot
n 0 0 38 38 0 360 DrawEllipse 90.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 342.00 252.27]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
5175 3155 tr
-90.000 rot
n 0 0 38 38 0 360 DrawEllipse 90.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 342.47 207.80]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
4943 3830 tr
-90.000 rot
n 0 0 38 38 0 360 DrawEllipse 90.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 327.00 252.80]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
4275 3155 tr
-90.000 rot
n 0 0 38 38 0 360 DrawEllipse 90.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 282.47 207.80]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
3600 3830 tr
-90.000 rot
n 0 0 38 38 0 360 DrawEllipse 90.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 237.47 252.80]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
6420 4083 tr
-135.000 rot
n 0 0 44 44 0 360 DrawEllipse 135.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 425.07 269.27]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
8420 3028 tr
-135.000 rot
n 0 0 38 38 0 360 DrawEllipse 135.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 558.80 199.33]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
7954 2552 tr
-135.000 rot
n 0 0 38 38 0 360 DrawEllipse 135.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 527.73 167.60]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
8266 3192 tr
-135.000 rot
n 0 0 38 38 0 360 DrawEllipse 135.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 548.53 210.27]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
7320 3184 tr
-135.000 rot
n 0 0 38 38 0 360 DrawEllipse 135.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 485.47 209.73]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Rotated Ellipse
gs
7328 4121 tr
-135.000 rot
n 0 0 38 38 0 360 DrawEllipse 135.000 rot
gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 486.00 272.20]  PATmp PATsp ef gr PATusp gs col0 s gr
gr

% Ellipse
n 10365 3109 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 688.47 204.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Ellipse
n 9585 2434 38 38 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 636.47 159.73]  PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
n 3544 1388 m 7913 1388 l 7913 769 l 3544 769 l cp gs col0 s gr 
% Polyline
n 7125 4624 m 6338 3844 l 8243 1946 l 9008 2704 l 7140 4616 l gs col0 s gr 
% Polyline
n 9450 2029 m 10575 2029 l 10575 4729 l 9450 4729 l cp gs col0 s gr 
% Polyline
n 9675 2479 m 9675 4279 l gs col0 s gr 
% Polyline
n 9675 2014 m 10357 1931 l gs col0 s gr 
% Polyline
n 10350 2479 m 10350 4279 l gs col0 s gr 
% Polyline
n 9450 2029 m 10575 2029 l 10575 4729 l 9450 4729 l cp gs col0 s gr 
% Polyline
n 9443 2089 m 10575 2089 l 10560 2089 l 10568 2089 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 629.53 139.27]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1755 1954 m 2047 1849 l 2078 1894 l 2078 8224 l gs col0 s gr 
% Polyline
n 3090 3492 m 2947 3146 l 3015 3109 l 5197 3116 l 5205 7177 l gs col0 s gr 
% Polyline
n 6720 4271 m 6382 4106 l 6405 4039 l 7965 2494 l 8483 3034 l 8295 3229 l
 7313 3139 l 7298 3192 l 7298 6371 l gs col0 s gr 
% Polyline
gs  clippath
2445 1906 m 2474 1785 l 2505 1906 l 2505 1744 l 2445 1744 l cp
clip
n 2468 4954 m 2475 1759 l gs col0 s gr gr

% arrowhead
n 2445 1906 m 2474 1785 l 2505 1906 l  col0 s
% Polyline
gs  clippath
2519 7957 m 2489 8077 l 2459 7957 l 2460 8119 l 2520 8119 l cp
clip
n 2475 5419 m 2490 8104 l gs col0 s gr gr

% arrowhead
n 2519 7957 m 2489 8077 l 2459 7957 l  col0 s
% Polyline
gs  clippath
1664 1832 m 1747 1924 l 1631 1882 l 1766 1972 l 1799 1922 l cp
clip
n 1590 1819 m 1770 1939 l gs col0 s gr gr

% arrowhead
n 1664 1832 m 1747 1924 l 1631 1882 l  col0 s
% Polyline
gs  clippath
9437 4347 m 9558 4370 l 9440 4407 l 9602 4398 l 9598 4338 l cp
clip
n 9300 4384 m 9585 4369 l gs col0 s gr gr

% arrowhead
n 9437 4347 m 9558 4370 l 9440 4407 l  col0 s
% Polyline
gs  clippath
9451 4592 m 9573 4611 l 9456 4652 l 9618 4638 l 9612 4578 l cp
clip
n 9255 4639 m 9600 4609 l gs col0 s gr gr

% arrowhead
n 9451 4592 m 9573 4611 l 9456 4652 l  col0 s
% Polyline
n 4253 5066 m 4253 5562 l 3787 5569 l gs col0 s gr 
% Polyline
n 1125 2029 m 2250 2029 l 2250 4729 l 1125 4729 l cp gs col0 s gr 
% Polyline
n 1350 2479 m 1350 4279 l gs col0 s gr 
% Polyline
n 1350 2014 m 2032 1931 l gs col0 s gr 
% Polyline
n 2025 2479 m 2025 4279 l gs col0 s gr 
% Polyline
n 1125 2029 m 2250 2029 l 2250 4729 l 1125 4729 l cp gs col0 s gr 
% Polyline
n 1118 2089 m 2250 2089 l 2235 2089 l 2243 2089 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 74.53 139.27]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3143 4047 m 3143 2922 l 5843 2922 l 5843 4047 l cp gs col0 s gr 
% Polyline
n 3593 3822 m 5393 3822 l gs col0 s gr 
% Polyline
n 3128 3822 m 3045 3140 l gs col0 s gr 
% Polyline
n 3593 3147 m 5393 3147 l gs col0 s gr 
% Polyline
n 3143 4047 m 3143 2922 l 5843 2922 l 5843 4047 l cp gs col0 s gr 
% Polyline
n 3203 4054 m 3203 2922 l 3203 2937 l 3203 2929 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 213.53 194.80]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7308 4140 m 8580 2868 l gs col0 s gr 
% Polyline
n 6978 4470 m 6437 4047 l gs col0 s gr 
% Polyline
n 6829 3663 m 8102 2390 l gs col0 s gr 
% Polyline
n 7195 4581 m 6394 3781 l 6405 3790 l 6400 3785 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 426.27 252.07]  PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9975 1969 m 10335 1842 l 10380 1887 l 10388 4084 l 10350 4099 l 9675 4099 l
 9630 4046 l 9630 3821 l 9660 3791 l 10410 3131 l 10410 3079 l
 9608 2404 l 9563 2434 l 9578 4676 l 9578 5171 l gs col0 s gr 
/Times-Roman-iso ff 300.00 scf sf
1665 3424 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
4200 3574 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
7590 3514 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
9840 3364 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2280 5246 m
gs 1 -1 sc (330mm) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
1425 1804 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
9120 4459 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
9075 4714 m
gs 1 -1 sc (C) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 9454 m
gs 1 -1 sc (Mount the cartridge on the special tool, allowing the cartridge to rotate around a horizontal axis \(Fig.1\).) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 11329 m
gs 1 -1 sc (Using the tool having a small weel, set the wire like in Fig.3.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 11089 m
gs 1 -1 sc (Rotate the cartridge by +45deg.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 11569 m
gs 1 -1 sc (Rotate the cartridge by -135deg. \(Fig.4\).) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 10849 m
gs 1 -1 sc (Rotate the cartridge by +90deg. \(Fig. 2\).) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 10609 m
gs 1 -1 sc (Fix the 30g weight on the plastic clamp.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 10369 m
gs 1 -1 sc (Mount the spring on the cartridge using the two  2mm diam. screws.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 10129 m
gs 1 -1 sc (Glue the other end on the spring at point A.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 9919 m
gs 1 -1 sc (Glue at one end a plastic clamp on which will be fixed the weight.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 11809 m
gs 1 -1 sc (Glue the wire in C.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 12049 m
gs 1 -1 sc (Glue the wire in A and B using silver loaded glue for electrical contact.) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
675 9679 m
gs 1 -1 sc (Take a 330mm long and 20um diam.  golden Tungsten + 3% Rhenium wire.) col0 sh gr
/Times-Roman-iso ff 300.00 scf sf
3675 1163 m
gs 1 -1 sc (ARC scanner: mount a new wire.) col0 sh gr
$F2psEnd
rs
end
showpage
