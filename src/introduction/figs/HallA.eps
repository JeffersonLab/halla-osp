%!PS-Adobe-3.1 EPSF-3.0
%%Title: HallA.eps
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%AI9_PrintingDataBegin
%%For: Kees de Jager
%%CreationDate: 10/29/03
%%CropBox: 0.000000 0.000000 662.673340 299.500977
%%BoundingBox: 0 0 663 300 
%%HiResBoundingBox: 0.000000 0.000000 662.673340 299.500977
%%LanguageLevel: 2 
%%DocumentData: Clean7Bit
%%Pages: 1 
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_CoolType_Core 1.1 0
%%+ procset Adobe_AGM_Core 2.0 0
%%DocumentFonts: 
%%DocumentSuppliedFonts: 
%%PageOrder: Ascend
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 

%%EndComments
%%BeginDefaults
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 233 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_dst64 64 string def
/AGMCORE_srcLen nd
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_imagestring0 nd
/AGMCORE_imagestring1 nd
/AGMCORE_imagestring2 nd
/AGMCORE_imagestring3 nd
/AGMCORE_imagestring4 nd
/AGMCORE_imagestring5 nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_mbuf () def
/AGMCORE_ybuf () def
/AGMCORE_kbuf () def
/AGMCORE_gbuf () def
/AGMCORE_bbuf () def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_arg1 nd
/AGMCORE_arg2 nd
/AGMCORE_&setgray nd
/AGMCORE_&image nd
/AGMCORE_&colorimage nd
/AGMCORE_&imagemask nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&&setcolorspace nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_in_rip_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ccimage_exists nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_ndx nd
/AGMCORE_err_strings nd
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/bdf
{
	bind def
} bind def
/xdf
{
	exch def
} def
/ldf 
{
	load def
} def
/ddf
{
	put
} def	
/xddf
{
	3 -1 roll put
} def	
/xpt
{
	exch put
} def
	/bdict
	{
		mark
	} def
	
	/edict
	{
		counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
	}def
	
/ps_level
	/languagelevel where{
		pop languagelevel
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/ndf
{
	1 index where{
		pop pop pop
	}{
		dup xcheck
		{bind}if
		def
	}ifelse
} def
/skip_image
{
	has_color ne{
		dup 256 idiv
		{currentfile AGMCORE_str256 readstring pop pop}repeat
		currentfile AGMCORE_str256 0 4 -1 roll 256 mod getinterval
		readstring pop pop
	}{
		pop
	}ifelse
} def
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
} def
/colorbuf
{
	0 1 2 index length 1 sub
		{
		dup 2 index exch get 
		255 exch sub 
		2 index 
		3 1 roll 
		put
		} for
} def
/makereadonlyarray
{
	/packedarray where
		{pop packedarray}
		{array astore readonly}
	ifelse
} def
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq 
	{
		dup /HalftoneType get 1 eq
			{
			/SpotFunction get
			}
			{
			dup /HalftoneType get 2 eq
				{
				/GraySpotFunction get
				}
				{
				pop
				{abs exch abs 2 copy add 1 gt {1 sub dup mul exch 1 sub dup mul add 1 sub}
				{dup mul exch dup mul add 1 exch sub}ifelse}bind
				}
			ifelse
			}
		ifelse
	}
	if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	userdict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	/AGMCORE_arg2 xdf
	/AGMCORE_arg1 xdf
	
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			dup (.) ne AGMCORE_arg1 0 lt and
				{
				pop
				}
				{
				stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
					{
					currentpoint AGMCORE_deltaY sub exch pop
					clippath pathbbox pop pop pop 44 add exch moveto
					} if
				AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
				} ifelse
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
			dup 94 eq 
				{
				pop
				AGMCORE_arg1 0 ge
					{
					AGMCORE_arg1 AGMCORE_str256 cvs
					dup /AGMCORE_tmp exch length def
					AGMCORE_str256 exch 0 exch putinterval
					AGMCORE_str256 0 AGMCORE_tmp getinterval
					stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
						{
						currentpoint AGMCORE_deltaY sub exch pop
						clippath pathbbox pop pop pop 44 add exch moveto
						} if
					AGMCORE_str256 0 AGMCORE_tmp getinterval show
					}
					{
					/AGMCORE_arg1 0 def
					} ifelse
				0 1 AGMCORE_str256 length 1 sub
					{
					AGMCORE_str256 exch 0 put
					}for
				/AGMCORE_tmp 0 def
				AGMCORE_arg1 0 ne
					{
					/AGMCORE_arg1 AGMCORE_arg2 def
					} if
				}
				{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
				}ifelse
			} ifelse
		} forall
} bdf
level2{
	/AGMCORE_map_reserved_ink_name
	{
		dup type /stringtype eq{
			dup /Red eq{
				pop (_Red_)
			}{
				dup /Green eq{
					pop (_Green_)
				}{
					dup /Blue eq{
						pop (_Blue_)
					}{
						dup /Cyan eq{
							pop (_Cyan_)
						}{
							dup /Magenta eq{
								pop (_Magenta_)
							}{
								dup /Yellow eq{
									pop (_Yellow_)
								}{
									dup /Black eq{
										pop (_Black_)
									}{
										dup / eq{
											pop (Process)
										}if
									}ifelse
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}if
	}def
}if
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not
		{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror
			{
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and {
				$error /newerror false put
				AGMCORE_cur_err /AGMCORE_bad_environ eq
					{
					/AGMCORE_bad_environ AGMCORE_ps_level AGMCORE_ps_version
					}
					{
					AGMCORE_cur_err 0 0
					} ifelse
				compose_error_msg
				} if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
		/AGMCORE_&&setcolorspace /setcolorspace ldf
	}if
	/AGMCORE_&image systemdict/image get def
	/AGMCORE_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMCORE_&colorimage /colorimage ldf
	}if
	/AGMCORE_in_rip_sep
		level2{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_gstate_known{
		where{
			/Adobe_AGM_Core_Id known
		}{
			false
		}ifelse
	}ndf
	/AGMCORE_GSTATE AGMCORE_gstate_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 7 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	end
}def
/page_setup
{
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/AGMCORE_ccimage_exists /customcolorimage where {pop true}{false} ifelse def
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and AGMCORE_producing_seps or
		}ifelse
	def
	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots
	}ifelse
	{
		/setcmykcolor[
			{4 copy add add add 0 eq currentoverprint and{pop 0.0005}if}/exec cvx
			/setcmykcolor load dup type/operatortype ne{/exec cvx}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/ln /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		/invert_image_samples
		{
			Adobe_AGM_Core/AGMCORE_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
		/get_gstate
		{
			AGMCORE_GSTATE begin
			/AGMCORE_GSTATE_ctm AGMCORE_tmpmatrix currentmatrix def
			/AGMCORE_GSTATE_clr_spc currentcolorspace def
			/AGMCORE_GSTATE_clr_indx 0 def
			/AGMCORE_GSTATE_clr_comps 12 array def
			mark currentcolor counttomark
				{AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 3 -1 roll put
				/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 add def} repeat pop
			/AGMCORE_GSTATE_fnt rootfont def
			/AGMCORE_GSTATE_lw currentlinewidth def
			/AGMCORE_GSTATE_lc currentlinecap def
			/AGMCORE_GSTATE_lj currentlinejoin def
			/AGMCORE_GSTATE_ml currentmiterlimit def
			currentdash /AGMCORE_GSTATE_do xdf /AGMCORE_GSTATE_da xdf
			/AGMCORE_GSTATE_sa currentstrokeadjust def
			
			/AGMCORE_GSTATE_clr_rnd currentcolorrendering def
			/AGMCORE_GSTATE_op currentoverprint def
			/AGMCORE_GSTATE_bg currentblackgeneration cvlit def
			/AGMCORE_GSTATE_ucr currentundercolorremoval cvlit def
			currentcolortransfer 
				cvlit /AGMCORE_GSTATE_gy_xfer xdf 
				cvlit /AGMCORE_GSTATE_b_xfer xdf
				cvlit /AGMCORE_GSTATE_g_xfer xdf 
				cvlit /AGMCORE_GSTATE_r_xfer xdf
			/AGMCORE_GSTATE_ht currenthalftone def
			/AGMCORE_GSTATE_flt currentflat def
			end
		}ndf
		
		/set_gstate
		{
			AGMCORE_GSTATE begin
			AGMCORE_GSTATE_ctm setmatrix
			AGMCORE_GSTATE_clr_spc setcolorspace
			AGMCORE_GSTATE_clr_indx {AGMCORE_GSTATE_clr_comps AGMCORE_GSTATE_clr_indx 1 sub get
			/AGMCORE_GSTATE_clr_indx AGMCORE_GSTATE_clr_indx 1 sub def} repeat setcolor
			AGMCORE_GSTATE_fnt setfont
			AGMCORE_GSTATE_lw setlinewidth
			AGMCORE_GSTATE_lc setlinecap
			AGMCORE_GSTATE_lj setlinejoin
			AGMCORE_GSTATE_ml setmiterlimit
			AGMCORE_GSTATE_da AGMCORE_GSTATE_do setdash
			AGMCORE_GSTATE_sa setstrokeadjust
			
			AGMCORE_GSTATE_clr_rnd setcolorrendering
			AGMCORE_GSTATE_op setoverprint
			AGMCORE_GSTATE_bg cvx setblackgeneration
			AGMCORE_GSTATE_ucr cvx setundercolorremoval
			AGMCORE_GSTATE_r_xfer cvx AGMCORE_GSTATE_g_xfer cvx AGMCORE_GSTATE_b_xfer cvx
				AGMCORE_GSTATE_gy_xfer cvx setcolortransfer
			AGMCORE_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
				{
				currenthalftone /HalftoneType get AGMCORE_GSTATE_ht /HalftoneType get ne
					{
					  mark AGMCORE_GSTATE_ht {sethalftone} stopped cleartomark
					} if
				}{
				AGMCORE_GSTATE_ht sethalftone
				} ifelse
			AGMCORE_GSTATE_flt setflat
			end
		}ndf
		AGMCORE_producing_seps not{
	
			/setcolorspace where{
				/Adobe_AGM_Core_Id known not
			}{
				true
			}ifelse
			{
				/setcolorspace
				{
					dup type dup /arraytype eq exch /packedarraytype eq or{
						dup 0 get dup /Separation eq{
							pop
							[ exch {} forall ]
							dup dup 1 get AGMCORE_map_reserved_ink_name 1 exch put
						}{
							/DeviceN eq {
								[ exch {} forall ]
								dup dup 1 get [ exch {AGMCORE_map_reserved_ink_name} forall ] 1 exch put
							}if
						}ifelse
					}if
					AGMCORE_&&setcolorspace 
				}def
			}if
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/ln{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/op /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/Adobe_AGM_Core 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	Adobe_AGM_Core/AGMCORE_name xddf
	false
	currentpagedevice/SeparationColorNames get{
		AGMCORE_name eq or
	}forall
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	1 setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMCORE_&imagemask
			}{
				AGMCORE_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMCORE_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMCORE_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/rdline {
	currentfile AGMCORE_str256 readline pop
} def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMCORE_src256 readstring pop
		dup length /AGMCORE_srcLen exch def
		/AGMCORE_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMCORE_srcLen 1 sub{
			1 index exch get
			AGMCORE_dst64 AGMCORE_ndx 3 -1 roll put
			/AGMCORE_ndx AGMCORE_ndx 1 add def
		}for
		pop
		AGMCORE_dst64 0 AGMCORE_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
	 						currentoverprint not{
			 					1 AGMCORE_&setgray
	 							knockout_image_samples
			 					currentdict imageormask_sys
			 				}{
			 					nulldevice currentdict imageormask_sys
			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										nulldevice
									}{
										invert_image_samples
									}ifelse
								}{
		 							currentoverprint not{
		 								knockout_image_samples
				 					}{
				 						nulldevice
				 					}ifelse
					 			}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
									
								currentcolortransfer
								{pop 1} exch addprocs 4 1 roll				
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								{pop 1} exch addprocs 4 1 roll
								setcolortransfer
									
								MultipleDataSources NComponents AGMCORE_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
		 								currentoverprint not{
		 									knockout_image_samples
				 						}{
				 							nulldevice
				 						}ifelse
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/tint_image_to_color
{
	begin
		Width Height BitsPerComponent ImageMatrix 
		/DataSource load
	end
	Adobe_AGM_Core begin
		/AGMCORE_mbuf 0 string def
		/AGMCORE_ybuf 0 string def
		/AGMCORE_kbuf 0 string def
		{
			colorbuf dup length AGMCORE_mbuf length ne
				{
				dup length dup dup
				/AGMCORE_mbuf exch string def
				/AGMCORE_ybuf exch string def
				/AGMCORE_kbuf exch string def
				} if
			dup AGMCORE_mbuf copy AGMCORE_ybuf copy AGMCORE_kbuf copy pop
		}
		addprocs
		{AGMCORE_mbuf}{AGMCORE_ybuf}{AGMCORE_kbuf} true 4 colorimage	
	end
} def			
/sep_imageormask_lev1
{
	begin
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{
				255 mul round cvi GrayLookup exch get
			} currenttransfer addprocs settransfer
			currentdict imageormask
		}{
			/sep_colorspace_dict AGMCORE_gget/Components known{
				MappedCSA 0 get /DeviceCMYK eq{
					Components aload pop
				}{
					0 0 0 Components aload pop 1 exch sub
				}ifelse
				
				Adobe_AGM_Core/AGMCORE_k xddf 
				Adobe_AGM_Core/AGMCORE_y xddf 
				Adobe_AGM_Core/AGMCORE_m xddf 
				Adobe_AGM_Core/AGMCORE_c xddf 
					
				AGMCORE_y 0.0 eq AGMCORE_m 0.0 eq and AGMCORE_c 0.0 eq and{
					{AGMCORE_k mul 1 exch sub} currenttransfer addprocs settransfer
					currentdict imageormask
				}{ 
					
					currentcolortransfer
					{AGMCORE_k mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_y mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_m mul 1 exch sub} exch addprocs 4 1 roll
					{AGMCORE_c mul 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer
					currentdict tint_image_to_color
				}ifelse
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
					currentdict imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
						{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
						setcolortransfer 
						currentdict tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	end
}def
/sep_image_lev1_sep
{
	begin
		/sep_colorspace_dict AGMCORE_gget/Components known{
			Components aload pop
			
			Adobe_AGM_Core/AGMCORE_k xddf 
			Adobe_AGM_Core/AGMCORE_y xddf 
			Adobe_AGM_Core/AGMCORE_m xddf 
			Adobe_AGM_Core/AGMCORE_c xddf 
				
			{AGMCORE_c mul 1 exch sub}
			{AGMCORE_m mul 1 exch sub}
			{AGMCORE_y mul 1 exch sub}
			{AGMCORE_k mul 1 exch sub}
		}{ 
			{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
			{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
		}ifelse
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMCORE_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or{
 								knockout_image_samples
		 					}{
		 						nulldevice 
		 					}ifelse
							currentdict imageormask_sys
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/read_image_file
{
	AGMCORE_imagefile 0 setfileposition
	dup /DataSource {AGMCORE_imagefile AGMCORE_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	{ (AGMCORE_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Core/AGMCORE_imagefile xddf 
		Adobe_AGM_Core/AGMCORE_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMCORE_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMCORE_imagefile exch writestring
		}for
		true
	}ifelse
}def
/imageormask_l2_overprint
{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
		AGMCORE_imagefile closefile (AGMCORE_imagefile) deletefile
	}{
		currentdict imageormask
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				nulldevice currentdict imageormask_sys
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_imageormask_lev1
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		currentdict
		MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
			
			{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
			imageormask
		}{
			
			MappedCSA 0 get /DeviceGray eq {
				{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceCMYK eq {
					currentcolortransfer
					{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}{ 
					currentcolortransfer
					{pop 1} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
					{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
					setcolortransfer 
					tint_image_to_color
				}ifelse
			}ifelse
		}ifelse
	end end
}def
/indexed_image_lev1_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
		{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
		
		AGMCORE_get_ink_data currenttransfer addprocs settransfer
		
		currentdict imageormask_sys
			
	end end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMCORE_&imagemask
		}{
			AGMCORE_&image
		}ifelse
			
	end end
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false op [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/MultipleDataSources false def
			/NComponents 1 def
			/ImageType 1 def
			/Decode [0 1 def]
			/SkipImageProc {false} def
			currentdict
		end
	}if
	dup begin
		/HostSepColorImage false def
		currentdict/Decode known not{
			/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
			] 
			def
		}if
		currentdict/Operator known not{
			/Operator /image def
		}if
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/cpaint_gcomp
{
	AGM_preserve_spots{
		gsave
		nulldevice
	}if
}def
/cpaint_gsep
{
	AGM_preserve_spots{
		grestore
		currentoverprint Adobe_AGM_Core/AGMCORE_ovp xddf 
	}{	
		gsave
		nulldevice
	}ifelse
}def
/cpaint_gend
{
	AGM_preserve_spots{
		Adobe_AGM_Core/AGMCORE_ovp get setoverprint
	}{
		grestore
	}ifelse
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 1.1 0
%%Copyright: Copyright 1997-1999 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 1.1 0
userdict/Adobe_CoolType_Core 40 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def}if currentpacking true
setpacking/bdf{bind def}bind def/ldf{load def}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto ldf/nfnt/newencodedfont ldf/mfnt/makefont
ldf/sfnt/setfont ldf/ufnt/undefinefont ldf/chp/charpath ldf/awsh/awidthshow
ldf/wsh/widthshow ldf/ash/ashow ldf/sh/show ldf end userdict
/Adobe_CoolType_Data 2 dict dup begin/WidthShowArray 256 array def
/GenFauxMMInst{}bind def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if Adobe_CoolType_Core/unload get exec systemdict
/undef known{userdict/Adobe_CoolType_Data undef}if}bind def/page_setup{
Adobe_CoolType_Core begin}bind def/page_trailer{end}bind def/unload{systemdict
/languagelevel known{systemdict/languagelevel get 2 ge{userdict
/Adobe_CoolType_Core 2 copy known{undef}{pop pop}ifelse}if}if}bind def/ndf{1
index where{pop pop pop}{dup xcheck{bind}if def}ifelse}def/findfont dup
systemdict begin userdict begin/globaldict where{/globaldict get begin}if dup
where pop exch get/globaldict where{pop end}if end end def/systemfindfont
/findfont load def/undefinefont{pop}ndf/copyfont{currentglobal 3 1 roll 1
index gcheck setglobal dup null eq{0}{dup length}ifelse 2 index length add 1
add dict begin exch{1 index/FID eq{pop pop}{def}ifelse}forall dup null eq{pop}
{{def}forall}ifelse currentdict end exch setglobal}bdf/newencodedfont{findfont
dup length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding exch
def currentdict end definefont pop}bdf/scff{$SubstituteFont begin dup type
/stringtype eq{dup length exch}{null}ifelse/$sname exch def/$slen exch def
/$fontname 1 index dup type/stringtype eq{cvn}if def/$used false def end
findfont $SubstituteFont begin $used{currentglobal exch dup gcheck setglobal
null copyfont begin/FontName $fontname def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}if/$sname null def
/$slen 0 def end}bdf/ConcatStrings{dup 0 exch{length add}forall string exch 0
exch{3 copy putinterval length add}forall pop}bind def/BeginFauxMMFont{1 index
findfont pop 2 array astore ConcatStrings 3 1 roll($)exch 3 array astore
ConcatStrings exch findfont currentglobal exch dup gcheck setglobal null
copyfont/tempfontname exch definefont pop exch 12 dict begin/FontName exch def
/FontType 0 def/FMapType 6 def/FontMatrix matrix def/PaintType 0 def}bind def
/EndFauxMMFont{currentdict end dup/FontName get exch definefont exch setglobal
exch mfnt sfnt}bind def/GenFauxMMInst{Adobe_CoolType_Data/GenFauxMMInst get
exec}bind def/DefFauxMMInst{Adobe_CoolType_Data exch/GenFauxMMInst exch bind
put}bind def/WSALoop{4 copy 1 index add 1 sub 1 exch{3 copy put pop 1 add}for
pop pop 3 2 roll add exch 256 add}bind def/BuildWidthShowArray{currentfont
begin FontType 0 eq dup{pop FMapType 6 eq}if{SubsVector dup length 1 sub 1
exch getinterval}{()}ifelse end Adobe_CoolType_Data/WidthShowArray get 0 0 4 3
roll{WSALoop}forall 256 2 index sub WSALoop pop pop pop}bind def/wsa{
Adobe_CoolType_Data/WidthShowArray get}bind def/?set{3 index findfont dup
/FontName known{dup/FontName get/Courier eq{4 index/Courier eq}{true}ifelse
exch/DistillerFauxFont known not and}{pop pop false}ifelse{exch pop exch pop
exch 2 dict dup/Found 3 index put exch findfont exch}{exch exec exch findfont
2 dict dup/Downloaded 6 5 roll put}ifelse dup/FontName 4 index put copyfont
definefont pop}bind def/?str1 256 string def/?str2 256 string def/?add{1 index
type/integertype eq{exch true 4 2}{false 3 1}ifelse roll 1 index findfont
/Downloaded known{exec exch{exch ?str2 cvs exch findfont/Downloaded get 1 dict
begin/Downloaded 1 index def ?str1 cvs length ?str1 1 index 1 add 3 index
putinterval exch length 1 add 1 index add ?str1 2 index(*)putinterval ?str1 0
2 index getinterval cvn findfont ?str1 3 index(+)putinterval 2 dict dup
/FontName ?str1 0 6 index getinterval cvn put dup/Downloaded Downloaded put
end copyfont dup/FontName get exch definefont pop pop pop}{pop}ifelse}{pop
exch{findfont dup/Found get dup length exch ?str1 cvs pop ?str1 1 index(+)
putinterval ?str1 1 index 1 add 4 index ?str2 cvs putinterval ?str1 exch 0
exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn 1 dict exch 1 index
exch/FontName exch put copyfont dup/FontName get exch definefont pop}{pop}
ifelse}ifelse}bind def/?sh{currentfont/Downloaded known{exch}if pop}bind def
/?chp{currentfont/Downloaded known{pop}{false chp}ifelse}bind def/?mv{
currentfont/Downloaded known{moveto pop pop}{pop pop moveto}ifelse}bind def
setpacking end/currentdistillerparams where dup{pop pop currentdistillerparams
/CannotEmbedFontPolicy 2 copy known{get/Error eq}{pop pop false}ifelse}if not
1 dict begin/SubstituteFont dup $error exch 2 copy known{get}{pop pop{pop
/Courier}bind}ifelse def userdict begin/$SubstituteFont 20 dict dup begin
/$used false def end def end{countdictstack array dictstack 0 get begin
userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128 string
def/$slen 0 def/$sname null def/$match false def/$fontname null def/$used
false def/$fontname null def/$italicangle 26.5 def/$findfontByEnum{dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def mark{$fontpat 0 $slen 7 add getinterval{/$match
exch def exit}$str filenameforall}stopped cleartomark/$slen 0 def $match false
ne{$match(fonts/)anchorsearch pop pop cvn/$used true def}{/Courier}ifelse}bind
def/$ROS 1 dict dup begin/Adobe 4 dict dup begin/Japan1[/Ryumin-Light
/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5/HeiseiMaruGo-W4/Jun101-Light]
def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]def/GB1[/STSong-Light
/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def end def end def
/$cmapname null def/$buildfontname{length $str 1 index(-)putinterval 1 add
$str 1 index $cmapname $fontpat cvs putinterval $cmapname length add $str exch
0 exch getinterval cvn/$used true def}bind def/$findfontByROS{/$fontname exch
def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}ifelse
}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1 index
/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}ifelse
exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall{$str
cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup/WidthsOnly
known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get dup/Registry
get Registry eq exch/Ordering get Ordering eq and and{exch restore exch pop
true exit}{pop restore}ifelse}$str/CIDFont resourceforall{$buildfontname}{
$fontname $findfontByEnum}ifelse}ifelse}bind def end end currentdict/$error
known currentdict/languagelevel known and dup{pop $error/SubstituteFont known}
if dup{$error}{Adobe_CoolType_Core}ifelse begin{/SubstituteFont/CMap/Category
resourcestatus{pop pop{$SubstituteFont begin dup length $slen gt $sname null
ne or $slen 0 gt and{$sname null eq{dup $str cvs dup length $slen sub $slen
getinterval cvn}{$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname
exch def/CMap findresource/CIDSystemInfo get{def}forall $findfontByROS}{pop
$findfontByEnum}ifelse}{//SubstituteFont exec}ifelse/$slen 0 def end}}{{
$SubstituteFont begin dup length $slen gt $sname null ne or $slen 0 gt and{
$findfontByEnum}{//SubstituteFont exec}ifelse end}}ifelse bind readonly def}{
/findfont{$SubstituteFont begin dup systemfindfont $slen 0 gt $sname null ne 3
index length $slen gt or and{dup/FontName get dup/Courier eq exch 3 index ne
and{pop $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall $fontname currentdict end definefont}{exch pop}
ifelse}{exch pop}ifelse end}bind def}ifelse end end}if end
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_AGM_Core/AGMCORE_err_strings 3 dict dup begin
/AGMCORE_bad_environ (Environment not satisfactory for this job, which requests at least
PostScript Level ^\tand at least PostScript version ^. Ensure that the PPD is correct or that
the PostScript  level requested is supported by this printer. ) def
/AGMCORE_color_space_onhost_seps (This job has content that will not separate
with on-host methods. ) def
/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end put
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
%%EndSetup
%%Page: name:1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
1 -1 scale 0 -299.501 translate
gsave
[1 0 0 1 0 0 ] concat
gsave
0 0 mo
0 299.501 ln
662.673 299.501 ln
662.673 0 ln
clp
250.75 206.104 mo
250.75 194.556 ln
247.952 194.556 ln
247.952 206.104 ln
250.75 206.104 ln
false op
0 0 0 0.3 cmyk
f
0.45 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
250.75 206.104 mo
250.75 194.556 ln
247.952 194.556 ln
247.952 206.104 ln
250.75 206.104 ln
cp
0 0 0 1 cmyk
s
256.35 206.104 mo
256.35 194.556 ln
253.55 194.556 ln
253.55 206.104 ln
256.35 206.104 ln
0 0 0 0.3 cmyk
f
256.35 206.104 mo
256.35 194.556 ln
253.55 194.556 ln
253.55 206.104 ln
256.35 206.104 ln
cp
0 0 0 1 cmyk
s
283.994 206.194 mo
283.994 193.597 ln
262.648 193.597 ln
262.648 206.194 ln
283.994 206.194 ln
0 0 0 0.3 cmyk
f
283.994 206.194 mo
283.994 193.597 ln
262.648 193.597 ln
262.648 206.194 ln
283.994 206.194 ln
cp
0 0 0 1 cmyk
s
262.648 204.354 mo
262.648 196.655 ln
247.602 196.655 ln
247.602 204.354 ln
262.648 204.354 ln
0 0 0 0.3 cmyk
f
262.648 204.354 mo
262.648 196.655 ln
247.602 196.655 ln
247.602 204.354 ln
262.648 204.354 ln
cp
0 0 0 1 cmyk
s
262.648 207.504 mo
262.648 191.407 ln
258.449 191.407 ln
258.449 207.504 ln
262.648 207.504 ln
0 0 0 0.3 cmyk
f
262.648 207.504 mo
262.648 191.407 ln
258.449 191.407 ln
258.449 207.504 ln
262.648 207.504 ln
cp
0 0 0 1 cmyk
s
287.842 207.504 mo
287.842 191.407 ln
283.643 191.407 ln
283.643 207.504 ln
287.842 207.504 ln
0 0 0 0.3 cmyk
f
287.842 207.504 mo
287.842 191.407 ln
283.643 191.407 ln
283.643 207.504 ln
287.842 207.504 ln
cp
0 0 0 1 cmyk
s
291.341 205.403 mo
291.341 194.206 ln
288.192 194.206 ln
288.192 205.403 ln
291.341 205.403 ln
0 0 0 0.3 cmyk
f
291.341 205.403 mo
291.341 194.206 ln
288.192 194.206 ln
288.192 205.403 ln
291.341 205.403 ln
cp
0 0 0 1 cmyk
s
370.949 113.199 mo
406.991 113.199 ln
419.587 125.098 ln
419.587 165.688 ln
415.387 165.688 ln
415.387 155.539 ln
370.773 155.19 ln
370.949 113.199 ln
0 0 0 0.59 cmyk
f
0.9 lw
370.949 113.199 mo
406.991 113.199 ln
419.587 125.098 ln
419.587 165.688 ln
415.387 165.688 ln
415.387 155.539 ln
370.773 155.19 ln
370.949 113.199 ln
cp
0 0 0 1 cmyk
s
367.365 201.903 mo
367.365 154.665 ln
292.131 154.665 ln
292.131 201.903 ln
367.365 201.903 ln
0 0 0 0.89 cmyk
f
0.45 lw
367.365 201.903 mo
367.365 154.665 ln
292.131 154.665 ln
292.131 201.903 ln
367.365 201.903 ln
cp
0 0 0 1 cmyk
s
344.004 171.111 mo
351.178 178.461 ln
351.178 178.461 341.379 194.906 316.71 192.282 cv
316.71 183.709 ln
344.004 171.111 ln
0 0 0 0.41 cmyk
f
0.9 lw
344.004 171.111 mo
351.178 178.461 ln
351.178 178.461 341.379 194.906 316.71 192.282 cv
316.71 183.709 ln
344.004 171.111 ln
cp
0 0 0 1 cmyk
s
317.06 192.633 mo
317.06 192.633 310.062 191.581 310.937 201.554 cv
310.937 201.554 339.63 201.205 359.926 201.554 cv
359.926 201.554 363.425 200.854 366.924 189.658 cv
361.85 183.533 ln
361.85 183.533 358.875 178.109 351.528 178.811 cv
351.528 178.811 342.779 195.081 317.06 192.633 cv
0 0 0 0.41 cmyk
f
317.06 192.633 mo
317.06 192.633 310.062 191.581 310.937 201.554 cv
310.937 201.554 339.63 201.205 359.926 201.554 cv
359.926 201.554 363.425 200.854 366.924 189.658 cv
361.85 183.533 ln
361.85 183.533 358.875 178.109 351.528 178.811 cv
351.528 178.811 342.779 195.081 317.06 192.633 cv
cp
0 0 0 1 cmyk
s
374.708 114.95 mo
374.708 111.976 ln
365.258 111.976 ln
365.258 114.95 ln
374.708 114.95 ln
0 0 0 0.59 cmyk
f
0.45 lw
374.708 114.95 mo
374.708 111.976 ln
365.258 111.976 ln
365.258 114.95 ln
374.708 114.95 ln
cp
0 0 0 1 cmyk
s
373.307 151.166 mo
373.307 115.13 ln
367.359 115.13 ln
367.359 151.166 ln
373.307 151.166 ln
0 0 0 0.59 cmyk
f
373.307 151.166 mo
373.307 115.13 ln
367.359 115.13 ln
367.359 151.166 ln
373.307 151.166 ln
cp
0 0 0 1 cmyk
s
378.472 92.9053 mo
347.354 81.8516 300.212 69.6172 241.62 68.293 cv
241.62 68.293 140.701 67.0156 62.7749 112.366 cv
62.7749 191.247 ln
36.9497 191.247 ln
36.9497 185.181 ln
57.0269 185.181 ln
57.0269 173.045 ln
48.7241 173.045 ln
48.7241 166.655 ln
57.6665 166.655 ln
57.6665 159.632 ln
48.0854 159.632 ln
48.0854 153.242 ln
57.6665 153.242 ln
57.6665 139.191 ln
48.8833 139.191 ln
48.8833 133.283 ln
58.7837 133.283 ln
58.7837 126.894 ln
52.7163 126.894 ln
52.7163 110.929 ln
52.7163 110.929 127.289 66.0576 241.939 65.0986 cv
241.939 65.0986 338.707 60.6279 432.598 111.088 cv
432.598 181.986 ln
546.292 181.986 ln
565.454 162.823 ln
638.907 162.823 ln
662.223 186.14 ln
662.223 212.646 ln
637.412 240.046 ln
566.028 240.046 ln
545.033 224.649 ln
431.324 224.521 ln
431.309 235.848 ln
398.068 235.848 ln
391.418 231.997 ln
307.438 231.997 ln
302.189 238.646 ln
182.866 238.646 ln
174.468 229.394 ln
87.688 229.394 ln
82.439 233.398 ln
57.0269 233.398 ln
57.0269 224.919 ln
422.379 224.919 ln
422.379 112.366 ln
422.379 112.366 413.295 106.531 392.818 98.3281 cv
378.472 98.3281 ln
378.472 92.9053 ln
0 0 0 0.3 cmyk
f
0.9 lw
378.472 92.9053 mo
347.354 81.8516 300.212 69.6172 241.62 68.293 cv
241.62 68.293 140.701 67.0156 62.7749 112.366 cv
62.7749 191.247 ln
36.9497 191.247 ln
36.9497 185.181 ln
57.0269 185.181 ln
57.0269 173.045 ln
48.7241 173.045 ln
48.7241 166.655 ln
57.6665 166.655 ln
57.6665 159.632 ln
48.0854 159.632 ln
48.0854 153.242 ln
57.6665 153.242 ln
57.6665 139.191 ln
48.8833 139.191 ln
48.8833 133.283 ln
58.7837 133.283 ln
58.7837 126.894 ln
52.7163 126.894 ln
52.7163 110.929 ln
52.7163 110.929 127.289 66.0576 241.939 65.0986 cv
241.939 65.0986 338.707 60.6279 432.598 111.088 cv
432.598 181.986 ln
546.292 181.986 ln
565.454 162.823 ln
638.907 162.823 ln
662.223 186.14 ln
662.223 212.646 ln
637.412 240.046 ln
566.028 240.046 ln
545.033 224.649 ln
431.324 224.521 ln
431.309 235.848 ln
398.068 235.848 ln
391.418 231.997 ln
307.438 231.997 ln
302.189 238.646 ln
182.866 238.646 ln
174.468 229.394 ln
87.688 229.394 ln
82.439 233.398 ln
57.0269 233.398 ln
57.0269 224.919 ln
422.379 224.919 ln
422.379 112.366 ln
422.379 112.366 413.295 106.531 392.818 98.3281 cv
378.472 98.3281 ln
378.472 92.9053 ln
0 0 0 1 cmyk
s
420.462 193.156 mo
623.417 193.156 ln
623.417 208.553 ln
541.883 208.553 ln
541.534 212.753 ln
419.762 212.753 ln
420.462 193.156 ln
0 0 0 0 cmyk
f
0.45 lw
420.462 193.156 mo
623.417 193.156 ln
623.417 208.553 ln
541.883 208.553 ln
541.534 212.753 ln
419.762 212.753 ln
420.462 193.156 ln
cp
s
37.895 205.337 mo
61.9692 205.337 ln
61.9692 224.999 ln
57.0698 224.999 ln
57.0698 210.979 ln
37.895 210.979 ln
37.895 205.337 ln
0 0 0 0.3 cmyk
f
37.895 205.337 mo
61.9692 205.337 ln
61.9692 224.999 ln
57.0698 224.999 ln
57.0698 210.979 ln
37.895 210.979 ln
37.895 205.337 ln
cp
0 0 0 1 cmyk
s
294.666 202.43 mo
288.105 212.052 ln
370.51 212.052 ln
370.51 202.604 ln
294.666 202.43 ln
0 0 0 0.89 cmyk
f
294.666 202.43 mo
288.105 212.052 ln
370.51 212.052 ln
370.51 202.604 ln
294.666 202.43 ln
cp
0 0 0 1 cmyk
s
288.017 212.403 mo
288.367 223.25 ln
294.491 223.25 ln
294.491 221.15 ln
347.678 221.15 ln
351.178 219.751 ln
370.51 219.751 ln
370.51 212.403 ln
288.017 212.403 ln
0 0 0 0.89 cmyk
f
288.017 212.403 mo
288.367 223.25 ln
294.491 223.25 ln
294.491 221.15 ln
347.678 221.15 ln
351.178 219.751 ln
370.51 219.751 ln
370.51 212.403 ln
288.017 212.403 ln
cp
0 0 0 1 cmyk
s
297.815 225.612 mo
297.815 221.326 ln
295.19 221.326 ln
295.19 225.612 ln
297.815 225.612 ln
0 0 0 0.89 cmyk
f
297.815 225.612 mo
297.815 221.326 ln
295.19 221.326 ln
295.19 225.612 ln
297.815 225.612 ln
cp
0 0 0 1 cmyk
s
304.638 225.612 mo
304.638 221.326 ln
302.013 221.326 ln
302.013 225.612 ln
304.638 225.612 ln
0 0 0 0.89 cmyk
f
304.638 225.612 mo
304.638 221.326 ln
302.013 221.326 ln
302.013 225.612 ln
304.638 225.612 ln
cp
0 0 0 1 cmyk
s
311.812 224.825 mo
311.812 222.2 ln
306.301 222.2 ln
306.301 224.825 ln
311.812 224.825 ln
0 0 0 0.89 cmyk
f
311.812 224.825 mo
311.812 222.2 ln
306.301 222.2 ln
306.301 224.825 ln
311.812 224.825 ln
cp
0 0 0 1 cmyk
s
306.213 224.3 mo
306.213 222.987 ln
304.638 222.987 ln
304.638 224.3 ln
306.213 224.3 ln
0 0 0 0.89 cmyk
f
306.213 224.3 mo
306.213 222.987 ln
304.638 222.987 ln
304.638 224.3 ln
306.213 224.3 ln
cp
0 0 0 1 cmyk
s
302.013 224.562 mo
302.013 222.465 ln
297.903 222.465 ln
297.903 224.562 ln
302.013 224.562 ln
0 0 0 0.89 cmyk
f
302.013 224.562 mo
302.013 222.465 ln
297.903 222.465 ln
297.903 224.562 ln
302.013 224.562 ln
cp
0 0 0 1 cmyk
s
362.549 225.612 mo
362.549 221.326 ln
365.174 221.326 ln
365.174 225.612 ln
362.549 225.612 ln
0 0 0 0.89 cmyk
f
362.549 225.612 mo
362.549 221.326 ln
365.174 221.326 ln
365.174 225.612 ln
362.549 225.612 ln
cp
0 0 0 1 cmyk
s
355.727 225.612 mo
355.727 221.326 ln
358.351 221.326 ln
358.351 225.612 ln
355.727 225.612 ln
0 0 0 0.89 cmyk
f
355.727 225.612 mo
355.727 221.326 ln
358.351 221.326 ln
358.351 225.612 ln
355.727 225.612 ln
cp
0 0 0 1 cmyk
s
348.554 224.825 mo
348.554 222.2 ln
354.064 222.2 ln
354.064 224.825 ln
348.554 224.825 ln
0 0 0 0.89 cmyk
f
348.554 224.825 mo
348.554 222.2 ln
354.064 222.2 ln
354.064 224.825 ln
348.554 224.825 ln
cp
0 0 0 1 cmyk
s
354.152 224.3 mo
354.152 222.987 ln
355.727 222.987 ln
355.727 224.3 ln
354.152 224.3 ln
0 0 0 0.89 cmyk
f
354.152 224.3 mo
354.152 222.987 ln
355.727 222.987 ln
355.727 224.3 ln
354.152 224.3 ln
cp
0 0 0 1 cmyk
s
358.351 224.562 mo
358.351 222.465 ln
362.463 222.465 ln
362.463 224.562 ln
358.351 224.562 ln
0 0 0 0.89 cmyk
f
358.351 224.562 mo
358.351 222.465 ln
362.463 222.465 ln
362.463 224.562 ln
358.351 224.562 ln
cp
0 0 0 1 cmyk
s
370.072 220.625 mo
370.072 219.751 ln
351.178 219.751 ln
351.178 220.625 ln
370.072 220.625 ln
0 0 0 0.89 cmyk
f
370.072 220.625 mo
370.072 219.751 ln
351.178 219.751 ln
351.178 220.625 ln
370.072 220.625 ln
cp
0 0 0 1 cmyk
s
355.727 224.3 mo
355.727 220.8 ln
353.627 220.8 ln
353.627 224.3 ln
355.727 224.3 ln
0 0 0 0.89 cmyk
f
355.727 224.3 mo
355.727 220.8 ln
353.627 220.8 ln
353.627 224.3 ln
355.727 224.3 ln
cp
0 0 0 1 cmyk
s
367.362 224.3 mo
367.362 220.8 ln
365.262 220.8 ln
365.262 224.3 ln
367.362 224.3 ln
0 0 0 0.89 cmyk
f
367.362 224.3 mo
367.362 220.8 ln
365.262 220.8 ln
365.262 224.3 ln
367.362 224.3 ln
cp
0 0 0 1 cmyk
s
368.499 222.465 mo
368.499 220.8 ln
367.362 220.8 ln
367.362 222.465 ln
368.499 222.465 ln
0 0 0 0.89 cmyk
f
368.499 222.465 mo
368.499 220.8 ln
367.362 220.8 ln
367.362 222.465 ln
368.499 222.465 ln
cp
0 0 0 1 cmyk
s
353.627 222.465 mo
353.627 220.8 ln
352.491 220.8 ln
352.491 222.465 ln
353.627 222.465 ln
0 0 0 0.89 cmyk
f
353.627 222.465 mo
353.627 220.8 ln
352.491 220.8 ln
352.491 222.465 ln
353.627 222.465 ln
cp
0 0 0 1 cmyk
s
227.13 221.03 mo
227.13 219.052 ln
288.367 219.052 ln
288.367 221.03 ln
227.13 221.03 ln
0 0 0 0.89 cmyk
f
227.13 221.03 mo
227.13 219.052 ln
288.367 219.052 ln
288.367 221.03 ln
227.13 221.03 ln
cp
0 0 0 1 cmyk
s
255.65 218.877 mo
255.65 210.828 ln
225.032 210.828 ln
225.032 218.877 ln
255.65 218.877 ln
0 0 0 0.405 cmyk
f
255.65 218.877 mo
255.65 210.828 ln
225.032 210.828 ln
225.032 218.877 ln
255.65 218.877 ln
cp
0 0 0 1 cmyk
s
245.327 210.87 mo
245.327 194.556 ln
235.179 194.556 ln
235.179 210.87 ln
245.327 210.87 ln
0 0 0 0.405 cmyk
f
245.327 210.87 mo
245.327 194.556 ln
235.179 194.556 ln
235.179 210.87 ln
245.327 210.87 ln
cp
0 0 0 1 cmyk
s
255.475 224.999 mo
255.475 220.975 ln
225.381 220.975 ln
225.381 224.999 ln
255.475 224.999 ln
0 0 0 0.405 cmyk
f
255.475 224.999 mo
255.475 220.975 ln
225.381 220.975 ln
225.381 224.999 ln
255.475 224.999 ln
cp
0 0 0 1 cmyk
s
244.627 238.772 mo
244.627 225.523 ln
236.404 225.523 ln
236.404 238.772 ln
244.627 238.772 ln
0 0 0 0.405 cmyk
f
244.627 238.772 mo
244.627 225.523 ln
236.404 225.523 ln
236.404 238.772 ln
244.627 238.772 ln
cp
0 0 0 1 cmyk
s
[10.8 2.7 ] 0 dsh
240.253 174.261 mo
240.253 252.118 ln
s
[] 0 dsh
317.935 153.966 mo
317.935 138.92 ln
341.642 115.388 ln
363.776 136.032 ln
353.278 148.367 ln
345.929 148.367 ln
345.929 153.966 ln
317.935 153.966 ln
cp
s
331.932 127.722 mo
334.556 130.171 ln
338.581 126.322 ln
337.181 124.572 ln
339.981 121.772 ln
338.93 120.547 ln
320.035 139.269 ln
320.035 144.868 ln
334.556 130.347 ln
331.932 127.722 ln
s
337.706 118.887 mo
360.451 140.319 ln
s
341.73 123.786 mo
321.435 150.816 ln
s
357.477 138.744 mo
336.481 151.865 ln
s
320.035 139.269 mo
320.035 151.958 ln
343.829 151.958 ln
343.829 146.968 ln
352.579 146.968 ln
359.926 138.569 ln
339.981 119.849 ln
338.93 120.547 ln
s
340.068 117.662 mo
361.413 138.132 ln
362.113 136.906 ln
340.943 116.786 ln
340.068 117.662 ln
cp
s
337.181 124.572 mo
355.727 143.469 ln
359.75 139.969 ln
s
336.481 131.572 mo
348.73 144.169 ln
s
336.481 131.572 mo
348.73 144.169 ln
s
333.332 134.72 mo
344.879 146.792 ln
s
338.406 134.194 mo
335.957 136.994 ln
s
340.68 136.119 mo
338.231 138.92 ln
s
343.479 139.093 mo
341.031 141.894 ln
s
345.58 141.718 mo
343.13 144.518 ln
s
0.9 lw
[5.4 2.7 ] 0 dsh
330.708 148.717 mo
330.708 148.717 361.5 120.023 360.976 120.372 cv
s
[] 0 dsh
343.829 151.958 mo
343.829 146.616 ln
320.56 146.616 ln
320.56 151.958 ln
343.829 151.958 ln
cp
s
0.45 lw
[5.4 2.7 ] 0 dsh
304.638 238.646 mo
430.959 238.646 ln
430.959 236.548 ln
s
415.387 182.31 mo
415.387 155.19 ln
368.763 155.19 ln
368.763 182.31 ln
415.387 182.31 ln
0 0 0 0.59 cmyk
f
[] 0 dsh
415.387 182.31 mo
415.387 155.19 ln
368.763 155.19 ln
368.763 182.31 ln
415.387 182.31 ln
cp
0 0 0 1 cmyk
s
377.771 183.008 mo
368.672 183.008 ln
368.672 201.903 ln
370.599 201.903 ln
377.771 183.008 ln
0 0 0 0.59 cmyk
f
377.771 183.008 mo
368.672 183.008 ln
368.672 201.903 ln
370.599 201.903 ln
377.771 183.008 ln
cp
0 0 0 1 cmyk
s
399.117 183.008 mo
416.438 183.008 ln
413.464 187.733 ln
400.516 187.733 ln
399.117 183.008 ln
0 0 0 0.59 cmyk
f
399.117 183.008 mo
416.438 183.008 ln
413.464 187.733 ln
400.516 187.733 ln
399.117 183.008 ln
cp
0 0 0 1 cmyk
s
400.516 187.733 mo
401.742 220.8 ln
412.764 220.8 ln
413.464 187.733 ln
0 0 0 0.59 cmyk
f
400.516 187.733 mo
401.742 220.8 ln
412.764 220.8 ln
413.464 187.733 ln
0 0 0 1 cmyk
s
293.792 227.188 mo
293.792 225.088 ln
306.124 225.088 ln
306.124 227.188 ln
293.792 227.188 ln
0 0 0 0.89 cmyk
f
293.792 227.188 mo
293.792 225.088 ln
306.124 225.088 ln
306.124 227.188 ln
293.792 227.188 ln
cp
0 0 0 1 cmyk
s
355.376 227.188 mo
355.376 225.088 ln
367.709 225.088 ln
367.709 227.188 ln
355.376 227.188 ln
0 0 0 0.89 cmyk
f
355.376 227.188 mo
355.376 225.088 ln
367.709 225.088 ln
367.709 227.188 ln
355.376 227.188 ln
cp
0 0 0 1 cmyk
s
409.439 225.612 mo
409.439 221.326 ln
412.065 221.326 ln
412.065 225.612 ln
409.439 225.612 ln
0 0 0 0.89 cmyk
f
409.439 225.612 mo
409.439 221.326 ln
412.065 221.326 ln
412.065 225.612 ln
409.439 225.612 ln
cp
0 0 0 1 cmyk
s
402.616 225.612 mo
402.616 221.326 ln
405.24 221.326 ln
405.24 225.612 ln
402.616 225.612 ln
0 0 0 0.89 cmyk
f
402.616 225.612 mo
402.616 221.326 ln
405.24 221.326 ln
405.24 225.612 ln
402.616 225.612 ln
cp
0 0 0 1 cmyk
s
395.443 224.825 mo
395.443 222.2 ln
400.954 222.2 ln
400.954 224.825 ln
395.443 224.825 ln
0 0 0 0.89 cmyk
f
395.443 224.825 mo
395.443 222.2 ln
400.954 222.2 ln
400.954 224.825 ln
395.443 224.825 ln
cp
0 0 0 1 cmyk
s
401.042 224.3 mo
401.042 222.987 ln
402.616 222.987 ln
402.616 224.3 ln
401.042 224.3 ln
0 0 0 0.89 cmyk
f
401.042 224.3 mo
401.042 222.987 ln
402.616 222.987 ln
402.616 224.3 ln
401.042 224.3 ln
cp
0 0 0 1 cmyk
s
405.24 224.562 mo
405.24 222.465 ln
409.353 222.465 ln
409.353 224.562 ln
405.24 224.562 ln
0 0 0 0.89 cmyk
f
405.24 224.562 mo
405.24 222.465 ln
409.353 222.465 ln
409.353 224.562 ln
405.24 224.562 ln
cp
0 0 0 1 cmyk
s
402.616 224.3 mo
402.616 220.8 ln
400.516 220.8 ln
400.516 224.3 ln
402.616 224.3 ln
0 0 0 0.89 cmyk
f
402.616 224.3 mo
402.616 220.8 ln
400.516 220.8 ln
400.516 224.3 ln
402.616 224.3 ln
cp
0 0 0 1 cmyk
s
402.266 227.188 mo
402.266 225.088 ln
414.598 225.088 ln
414.598 227.188 ln
402.266 227.188 ln
0 0 0 0.89 cmyk
f
402.266 227.188 mo
402.266 225.088 ln
414.598 225.088 ln
414.598 227.188 ln
402.266 227.188 ln
cp
0 0 0 1 cmyk
s
2.7 lw
36.7681 199.806 mo
313.737 199.806 ln
313.737 199.806 332.283 200.854 341.031 197.006 cv
341.031 197.006 355.552 194.032 367.098 174.261 cv
416.262 120.372 ln
0 0 0 0.11 cmyk
s
0.9 lw
[10.8 2.7 ] 0 dsh
36.6001 198.756 mo
312.687 198.756 ln
312.687 198.756 331.408 200.331 340.156 196.481 cv
340.156 196.481 354.152 194.382 366.75 173.387 cv
415.387 119.849 ln
0 0 0 1 cmyk
s
354.152 151.78 mo
369.812 151.78 ln
371.999 152.392 371.211 152.654 371.211 152.654 cv
371.211 166.737 ln
355.644 166.737 ln
351.444 166.388 348.293 168.487 348.293 168.487 cv
309.804 185.982 ln
246.202 185.982 ln
246.202 177.235 ln
345.846 153.441 ln
348.993 152.669 351.843 152.122 354.422 151.753 cv
0 0 0 0.7 cmyk
f
[] 0 dsh
354.152 151.78 mo
369.812 151.78 ln
371.999 152.392 371.211 152.654 371.211 152.654 cv
371.211 166.737 ln
355.644 166.737 ln
351.444 166.388 348.293 168.487 348.293 168.487 cv
309.804 185.982 ln
246.202 185.982 ln
246.202 177.235 ln
345.846 153.441 ln
348.993 152.669 351.843 152.122 354.422 151.753 cv
0 0 0 1 cmyk
s
306.738 162.714 mo
311.288 185.284 ln
s
346.803 153.091 mo
349.954 168.137 ln
s
0.45 lw
[5.4 2.7 ] 0 dsh
43.9478 136.47 mo
69.8423 136.47 ln
s
43.9478 156.416 mo
69.8423 156.416 ln
s
43.9478 169.712 mo
69.8423 169.712 ln
s
1.8 lw
[] 0 dsh
27.1519 97.9795 mo
62.8433 97.9795 ln
62.8433 97.9795 140.526 57.0371 241.303 59.4873 cv
241.303 59.4873 338.219 55.0166 422.549 99.4561 cv
450.543 99.4561 ln
498.144 133.32 ln
659.806 133.32 ln
s
520.889 193.156 mo
520.889 134.021 ln
513.891 134.021 ln
513.891 193.156 ln
520.889 193.156 ln
0 0 0 0 cmyk
f
0.45 lw
520.889 193.156 mo
520.889 134.021 ln
513.891 134.021 ln
513.891 193.156 ln
520.889 193.156 ln
cp
0 0 0 1 cmyk
s
415.564 213.103 mo
413.464 213.103 ln
0 0 0 0 cmyk
f
0.9 lw
415.564 213.103 mo
413.464 213.103 ln
0 0 0 1 cmyk
s
415.564 193.857 mo
400.867 193.857 ln
0 0 0 0 cmyk
f
415.564 193.857 mo
400.867 193.857 ln
0 0 0 1 cmyk
s
0.45 lw
411.713 194.206 mo
410.664 213.452 ln
401.217 213.452 ln
s
401.217 213.452 mo
401.129 202.954 ln
394.832 202.954 394.568 213.452 394.568 213.452 cv
401.217 213.452 ln
0 0 0 0.59 cmyk
f
401.217 213.452 mo
401.129 202.954 ln
394.832 202.954 394.568 213.452 394.568 213.452 cv
401.217 213.452 ln
cp
0 0 0 1 cmyk
s
456.854 212.753 mo
456.854 198.055 ln
450.205 198.055 ln
450.205 212.753 ln
456.854 212.753 ln
cp
s
483.973 201.729 mo
483.973 197.88 ln
457.552 197.88 ln
457.552 201.729 ln
483.973 201.729 ln
cp
s
462.802 203.304 mo
462.802 206.452 ln
462.802 206.452 460.002 204.704 460.002 208.553 cv
460.002 212.577 ln
s
566.909 201.554 mo
566.909 197.706 ln
494.12 197.706 ln
494.12 201.554 ln
566.909 201.554 ln
cp
s
565.328 199.63 mo
570.052 195.081 ln
602.419 195.081 ln
602.419 204.529 ln
569.528 204.529 ln
565.328 199.63 ln
0 0 0 0.11 cmyk
f
565.328 199.63 mo
570.052 195.081 ln
602.419 195.081 ln
602.419 204.529 ln
569.528 204.529 ln
565.328 199.63 ln
cp
0 0 0 1 cmyk
s
2.7 lw
338.323 199.455 mo
609.419 200.504 ln
0 0 0 0.11 cmyk
s
0.9 lw
[10.8 2.7 ] 0 dsh
343.479 198.404 mo
621.666 198.404 ln
0 0 0 1 cmyk
s
0.45 lw
[] 0 dsh
456.854 202.78 mo
456.854 197.181 ln
447.055 197.181 ln
447.055 202.78 ln
456.854 202.78 ln
cp
s
463.502 193.156 mo
463.502 212.753 ln
s
475.399 193.156 mo
475.399 212.753 ln
s
483.797 193.156 mo
483.797 212.753 ln
s
494.295 193.156 mo
494.295 212.753 ln
s
602.419 206.104 mo
602.419 204.529 ln
569.528 204.529 ln
569.528 206.104 ln
602.419 206.104 ln
0 0 0 0.11 cmyk
f
[10.8 2.7 ] 0 dsh
602.419 206.104 mo
602.419 204.529 ln
569.528 204.529 ln
569.528 206.104 ln
602.419 206.104 ln
cp
0 0 0 1 cmyk
s
572.852 209.427 mo
572.852 205.403 ln
570.579 205.403 ln
570.579 209.427 ln
572.852 209.427 ln
0 0 0 0.11 cmyk
f
572.852 209.427 mo
572.852 205.403 ln
570.579 205.403 ln
570.579 209.427 ln
572.852 209.427 ln
cp
0 0 0 1 cmyk
s
598.746 209.427 mo
598.746 205.403 ln
596.471 205.403 ln
596.471 209.427 ln
598.746 209.427 ln
0 0 0 0.11 cmyk
f
598.746 209.427 mo
598.746 205.403 ln
596.471 205.403 ln
596.471 209.427 ln
598.746 209.427 ln
cp
0 0 0 1 cmyk
s
[] 0 dsh
62.8433 108.476 mo
62.8433 0 ln
s
422.561 108.476 mo
422.561 0 ln
s
66.3433 18.5469 mo
165.72 18.5469 ln
s
319.685 18.5469 mo
421.161 18.5469 ln
s
72.2925 16.0977 mo
63.894 18.5469 ln
72.2925 21.3457 ln
72.2925 16.0977 ln
f
[10.8 2.7 ] 0 dsh
72.2925 16.0977 mo
63.894 18.5469 ln
72.2925 21.3457 ln
72.2925 16.0977 ln
cp
s
[] 0 dsh
209.81 107.076 mo
233.605 107.076 ln
233.605 110.226 ln
229.406 114.774 ln
215.409 114.774 ln
209.46 110.052 ln
209.81 107.076 ln
cp
s
234.655 109.175 mo
402.616 109.175 ln
387.569 102.527 ln
377.072 102.527 ln
377.072 93.8701 ln
222.058 93.8701 ln
206.311 104.978 ln
206.311 108.476 ln
210.07 108.476 ln
s
202.461 108.826 mo
95.7368 108.826 ln
s
221.358 101.827 mo
221.358 120.724 ln
s
[5.4 2.7 ] 0 dsh
242.002 118.624 mo
242.002 50.3896 ln
s
413.464 20.9961 mo
421.862 18.5469 ln
413.464 15.7471 ln
413.464 20.9961 ln
f
[10.8 2.7 ] 0 dsh
413.464 20.9961 mo
421.862 18.5469 ln
413.464 15.7471 ln
413.464 20.9961 ln
cp
s
[] 0 dsh
229.494 82.2314 mo
229.494 93.8672 ln
s
256 82.2314 mo
256 93.8672 ln
s
226.957 88.8809 mo
258.711 88.8809 ln
s
229.406 89.0537 mo
227.831 69.1113 ln
227.831 69.1113 245.677 67.9717 257.312 69.5469 cv
s
257.312 69.1982 mo
256 88.8809 ln
s
259.149 70.248 mo
259.149 71.4717 ln
259.149 71.4717 245.589 68.8467 226.519 70.8594 cv
226.519 69.2842 ln
226.519 69.2842 250.576 67.3604 259.149 70.248 cv
cp
s
102.035 148.717 mo
102.035 216.601 ln
s
147.175 176.011 mo
147.175 197.356 ln
s
99.2349 215.628 mo
101.685 224.026 ln
104.484 215.628 ln
99.2349 215.628 ln
f
[10.8 2.7 ] 0 dsh
99.2349 215.628 mo
101.685 224.026 ln
104.484 215.628 ln
99.2349 215.628 ln
cp
s
144.375 188.685 mo
146.825 197.083 ln
149.625 188.685 ln
144.375 188.685 ln
f
144.375 188.685 mo
146.825 197.083 ln
149.625 188.685 ln
144.375 188.685 ln
cp
s
[] 0 dsh
102.035 113.725 mo
102.035 121.424 ln
s
99.2349 117.301 mo
101.685 108.903 ln
104.484 117.301 ln
99.2349 117.301 ln
f
[10.8 2.7 ] 0 dsh
99.2349 117.301 mo
101.685 108.903 ln
104.484 117.301 ln
99.2349 117.301 ln
cp
s
save_ctm
restore_ctm
save_ctm
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica-Bold Initial
11 dict begin
/FontName /Helvetica-Bold def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0 ] def
/Encoding  256 array 0 1 255 {1 index exch /.notdef put} for  def
/PaintType 0 def
/FontType 1 def
/FontBBox { 0 0 0 0 } def
/FontInfo 1 dict dup begin
  /OrigFontType /TrueType def
end readonly def
currentdict
end

systemdict begin
dup /Private 7 dict dup begin
/BlueValues [-15 0 600 650] def
/MinFeature {16 16} def
/password 5839 def
/ND {def} def
/NP {put} def
/RD {string currentfile exch readhexstring pop} def
2 index /CharStrings 392 dict dup begin
/.notdef 
<10bf3170245fd1223a03820c84ab4224df604f1b5035cf5bf68168bb347f
e08e590356e04269139259cb> ND 
/space 
<10bf317079c7734bf7> ND 
/five 
<10bf3170573e1e04e0e0acd9d497ba6373df0b7cefedf4c608a03c92d1a5
3d52d1b889bee837975df7b8cc07214d8031c421502e4b6cd7178dc50235
5b25b58d26b223b4cead77b1d1e557400830bd9eb8e0ac02b76f0366fa11
71248be5d840e8a3bba3d5b2b931bbc241693799f00c7593a092df8e866f
a3886c2be5432ad870a377c9ec6c1208885f51cdfee826b3c60b27c4cbf3
> ND 
/C 
<10bf31704ab339412d839a95db5b654853c3fcb6954141c9b32d054484b6
b06badf6ba0f973e32f258a0e90958d3db96c077319ff993d3e72b957c40
35784b705274ada9d7cd04c659180689fe8962423e5461602c16db7e751d
4e559995170b470e8ea6a61970d6667cd5c70e5be09dc680619f21cd9ab5
566b586257e945f4dd13c33c416a3d0310ea> ND 
/H 
<10bf3170245fd12235fd30864a3e1b96959651ea7c00dc24f98eb1db859f
bea5a2e2358f52556ec2ba72eea2a4a823ed8f> ND 
/a 
<10bf31705ac903dc9a980332054142edc1bfb45dfde3edfcd092944d2a3d
60c38d26b16096b00afa872e61d8cbc4b1e9554922156325422ff8ae2f84
0abdad118c0510c36b9b35ff971e4a4ed009684425a99240c381bbd516e7
e121bf27d7484356156addcf03862a89aa7482bc6ebdc8013f94ab4f03d0
b08648b78a32f9cdbd45275167fd9fda99356802f5f78809bc8c31503289
6940b123a66205974de65990dbc79af226940f05cf15b8192712358fefcd
cd95694ec884429443375f3a3f51f6e411eba06e332359d89702268094b7
f8cf971d318edddcb5d55a14bd22d9122db0022377d960eb94c483dc1cad
82735ed3a2> ND 
/e 
<10bf317050d961e856d3e0fbc24a1e3ca30018c950e2b683f62e53f46660
c84745fa13078b5839b0bdf0ae4ccec834e3fb559fdce22c50198060c97b
c1e734b3cde28f94ccecf5e255370d94b49f8d965583846c15dc30edb076
0de2245009015f26141517e511ab3505b4a2abd16a01c6d9e5d2e5a3a4e8
018b1a0231f662f9a11b361d7f2cdd2d040d83dd5dd563b5efe6724b6dbd
01c8b6c1bbbd273ba424> ND 
/f 
<10bf3170675b06f5341b82bb095b4a62d2b5e987ce23ec6a01e6eba246fb
c670b169f1d3a98bdbb8ede842bc014a1db426f46134197423aa11e4b3cd
f4908f3d5429ce7cb75172278e5480d29f17b9ce8cd7c84ae4945ab832b0
993accc651b6e78900> ND 
/g 
<10bf3170599ab5ce2b07f5fc1c73364e490e8543f701f38b92c20ccbda06
b9cc59073809997a27179c60a3cff0ff2ff1a399490cabee6696db240d91
1da9ce9196f7a95fdfc4da84408c1885161bb3cc0317047b15d56b84ba06
4b7d38ece514619cf9b155ba8444c7cab0e58101239fcfcd8e4360b53353
29dec5fe22f963c2fe1107b31e64a1419f6a401a40ef6ccdb5b4a67b1ca0
3c81cfadb73d9caf1dcd9c578c5465aa08f1d65253296610d6e91a8d56b4
c1879605119fa8f318c2a31ca7d169735cdbb07b5c85bc57b838c6> ND 
/h 
<10bf31703f9318caa84ea6a9c16c1b76702e89f9d28f17996887f4d16641
163503231f4d53f9a48c8861117036bf44e03eda713edc715a5bb542048b
97b4022a69ab425bf9cae2c32b07d1f9e5f32d2dc9904ac628a0b2cf6f9b
65f15d60b1fe3223e069947d59be0c389c534dba6e> ND 
/i 
<10bf31703cf768e92f79b784e5739123bfa643711e35e919f3001cfa0d69
85171f2e76ec61bcc965db8fd33aaa> ND 
/n 
<10bf31703f9318caa84c39b055118248ad0794ad898db759a12fb661323e
e740325c43a4409880eaccc26f47c57cf39704c3538ead07c60b94033378
27fcf412dec10ef62e9d29b31581438fb4828d56d424387cb4c6ae929793
81d01a842fd0> ND 
/r 
<10bf3170383e353613770e840831b40dc281dcb1d759667c6321b7951817
e2bdf4328be115de2ceb660404ff65e815437017589152e11f1053631aae
9f673a5017c8833591d1f5825fbc2e0eb7ce65bef56d48d648dd3667ce6c
> ND 
/t 
<10bf3170675b06f5169c29abc2bc2a5c057adc41117173db8bedaa0570a0
556ee3d22e9b6ab069dfcf0f9b4821522baf60838c684cddc91e8c1d15ca
db897d733b90bfda24ca3bd2cf4871010da40c39c92606f867d17ddd59> ND 
end
end
put
put
dup /FontName get exch definefont pop
end
/Helvetica-Bold findfont /Encoding get
dup 32 /space put
dup 53 /five put
dup 67 /C put
dup 72 /H put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 114 /r put
dup 116 /t put
pop
%ADOEndSubsetFont
/Helvetica-Bold*1 
[
32{/.notdef}repeat /space 20{/.notdef}repeat /five 13{/.notdef}repeat /C 4{/.notdef}repeat /H 
24{/.notdef}repeat /a 3{/.notdef}repeat /e /f /g /h /i 
4{/.notdef}repeat /n 3{/.notdef}repeat /r /.notdef /t 139{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
93.0415 132.271 mov
(55 ft) sh
63.8794 146.267 mov
(Crane Height) sh
restore_ctm
save_ctm
restore_ctm
save_ctm
restore_ctm
[] 0 dsh
256.696 140.292 mo
255.544 152.67 ln
276.54 162.817 ln
s
221.708 183.358 mo
227.306 183.358 ln
234.655 192.458 ln
s
save_ctm
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/D 
<10bf3170258d0fb1827b4d63546d1e8890b450128e718394b2981e6f6880
90733ec005f9334e4d870ab2bf2becb22e403b67e52593ab41aa3d4ab17a
9411ff23ed69cb9437c4bcea5d28074f94aad726af4625aab5433bd69c8b
6c5e02b8df29767ad47a9c20322f229b83badc3415> ND 
/P 
<10bf31702957671f053c4d7e1a2ec6131cafb09bbc7f25a15fa18b02e3b0
e0c6e80eb826e017139291116cf620941d831d1377e4fe859330aee1562f
f01a742f4657d7423dacfdaf509cf7f8035bd9e138ee5813347f83c8f720
c39fed9771611dd557b2a1103de8e6ce32> ND 
/S 
<10bf31704726f1e5ad131a0f08bdec516b23791e3c85f51a82b53e86a3ff
e4dd1615e06d0fc6fed3cc85c9bc7fb37e23a06d0e7bb87c3ca77b231d6e
607d22c2f431f1cc014ae389f260f11e70dac16b09a0f043eba5cf256d45
f770cbcc9eeeac129265851de90465995b22210dea35d73311eaee8961d4
53af90a3f06ae076c8beaf0f8595c39945c22543d9d6ae108fb5766e9715
6413bc32ac094f688227d449f7ccb675e564709a7baa8e3190c156136043
f2a5577317d7249e2225cbf25baddf> ND 
/c 
<10bf31705c36af5cef4fe17ea5d6cfdcf970fe6ba98ca3edff6c9e230da7
3c61225e823502fec59560082987ae8d8e8855743ff399e3cbc19733bc02
e1a2e859944f4099845e5eb885f5aff32878c089bbadbd443fcff4760237
9e2f3026d37f7b7dbc4511739aff95dd1e5aed4d851e497ab2e5f5c6d4fa
bc20e15e28c0b98b239949ffb2> ND 
/o 
<10bf3170599ab5ce2b3b1d39ba0248821b6c8d2a581f00f3b0fe28e7d60e
a97d79aedda77dbbfb5a74acca63b21e14802f26148c5f85d2ac2f3279bd
678742d8a5deb762b4b070ee0b46655e7ba7ee9c993e447927b636b4fd8f
e28e741571e94d1caba3e9504d232e9bf12aafa593029a9c1e304f49d2db
e8329f161205388e8c2fe972f14dac4a> ND 
/s 
<10bf3170599a82aec1da869c17b98e2eb7b99773d07c6f11c63a5f54bf0a
fa3e5d7dc7b7d09b09548f849e2098eca1f5aa0d804b703338d8e5e14b5f
945ff49ef685848b10db5454cc8071c34183bbc708ca738c857241085a5b
cb61a89e4fe0623e87fc233c30090176d52788e70b3e96dbb3a3a824d442
e641ef15b9153b16959a25efa78c041ac99820375800ba57465d7ba63d30
af9a62fbfe7579d5224d31986790191b6e8903cb905ef50e1e4f7444700e
afae9900796e0dcf> ND 
/v 
<10bf31706ae035c090d04959298479117c1d7fbdadbb01b336662b5af1d7
e1f3afddf4200e15eb89d022c179> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 68 /D put
dup 80 /P put
dup 83 /S put
dup 99 /c put
dup 111 /o put
dup 115 /s put
dup 118 /v put
pop
%ADOEndSubsetFont
/Helvetica-Bold*2 
[
68{/.notdef}repeat /D 11{/.notdef}repeat /P 2{/.notdef}repeat /S 15{/.notdef}repeat /c 
11{/.notdef}repeat /o 3{/.notdef}repeat /s 2{/.notdef}repeat /v 137{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
329.648 37.5693 mov
(D) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
339.756 37.5693 mov
(ete) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
359.986 37.5693 mov
(c) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
367.77 37.5693 mov
(t) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
372.431 37.5693 mov
(o) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
380.981 37.5693 mov
(r in) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
341.297 51.566 mov
(S) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
350.633 51.566 mov
(er) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
363.864 51.566 mov
(v) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
371.649 51.566 mov
(i) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
375.537 51.566 mov
(c) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
383.322 51.566 mov
(e) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
338.598 65.5627 mov
(Pos) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
364.268 65.5627 mov
(iti) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
376.706 65.5627 mov
(o) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
385.256 65.5627 mov
(n) sh
restore_ctm
11.4556 225.428 mo
54.7954 225.349 ln
s
599.622 213.452 mo
589.124 263.141 ln
580.375 263.141 ln
s
143.675 234.523 mo
146.125 226.126 ln
148.924 234.523 ln
143.675 234.523 ln
f
[10.8 2.7 ] 0 dsh
143.675 234.523 mo
146.125 226.126 ln
148.924 234.523 ln
143.675 234.523 ln
cp
s
save_ctm
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/T 
<10bf317069b18243e560486fe87dc9992a887cff58ceb6ae768ec10ffbc5
a8ebd8e8006a2d5e> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/Helvetica-Bold*3 
[
84{/.notdef}repeat /T 171{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*3 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
176.525 187.909 mov
(T) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
185.074 187.909 mov
(arget) sh
restore_ctm
[] 0 dsh
221.27 121.822 mo
222.021 121.822 222.63 121.213 222.63 120.46 cv
222.63 119.709 222.021 119.1 221.27 119.1 cv
220.518 119.1 219.909 119.709 219.909 120.46 cv
219.909 121.213 220.518 121.822 221.27 121.822 cv
cp
s
save_ctm
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/B 
<10bf31702819c97be241513f235017cf2215e04e91ff5c8e10af8f1ce18f
ef7009969366a1b28610638cb8faafc6f6cee080d22c1cabdb8c2dd57c07
00a73383b0ff371f1bab2162acb667d5ba193bb918575ab3aa65d01261b1
f9c98d1b2df190df10783d1cb929e237c0ffd3dfbf0729388b962dfc9a41
af6f0719c3decb8c1f85e8078f3879c5aeaa40f363723d723c240d50232b
1c2a942cf240cc66e98f6878144a7a28e3fbbaa492f32dfa502bbecedf59
ee> ND 
/m 
<10bf3170383c8210c072140cab27b092372b04317d7f4fdde6636842c685
49c74ff371d463a64cf6dd3520417b1923af8e6ce17052e8c012d73e32ef
61f1187079ea2bd6b033c72e2fa3285aa45c88b9231a1315cc310be5ecf9
bdea68818f0d17eeba116ce35a1d752ac97587eee5bdec2ddc30776e833b
993b18e8213c386fe10e0fd8dcc9f21de1fbf5cdcf20f40a432b78b89688
241a925a17278b5cf39c96b1adcd01f363e08b08ced3648b2129> ND 
/p 
<10bf31703a9ba95b45a9cf140d8a87a246da7f8ee6834ac3a6fd4af711bf
af9a7797100c41e48a87ca8b281167d5ddd9764019eb8ed28fa1ae8686b3
44afde5195b0bb440fa32058ffa2282f0950d2f5c3a8ccc1fc85087b2365
4b30a5a6ec03c0d0d824c238efdf8219ecbe1cf392d82c6c1397cd3b21c1
69fecc6a3e70bc6e5d2cfb8e1a8d5e4793c41b7eb67196abb510df2df420
> ND 
/u 
<10bf31703a9ba95b45093029f80c676c6526effd16fcf46dceda12224955
65c9a6c16a10fcb63f3cfcd90374be64c790b45040b027714e82103b575a
8582727f638782806e0ea0c9a61d41faf3e0874b6a4e5e161ef44b28cc10
973c6c844fe3244dc6c87572764d87a1> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 66 /B put
dup 109 /m put
dup 112 /p put
dup 117 /u put
pop
%ADOEndSubsetFont
/Helvetica-Bold*4 
[
66{/.notdef}repeat /B 42{/.notdef}repeat /m 2{/.notdef}repeat /p 4{/.notdef}repeat /u 
138{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
497.203 268.039 mov
(B) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
507.311 268.039 mov
(ea) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
522.88 268.039 mov
(m) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
535.325 268.039 mov
( ) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
539.214 268.039 mov
(D) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
549.322 268.039 mov
(ump) sh
restore_ctm
228.185 188.571 mo
235.354 193.583 ln
232.277 185.284 ln
228.185 188.571 ln
f
[10.8 2.7 ] 0 dsh
228.185 188.571 mo
235.354 193.583 ln
232.277 185.284 ln
228.185 188.571 ln
cp
s
273.207 163.469 mo
281.733 165.42 ln
275.763 158.884 ln
273.207 163.469 ln
f
273.207 163.469 mo
281.733 165.42 ln
275.763 158.884 ln
273.207 163.469 ln
cp
s
[] 0 dsh
333.682 177.761 mo
347.678 200.504 ln
s
348.73 220.449 mo
348.73 213.103 ln
s
331.932 200.504 mo
325.984 180.91 ln
s
339.63 173.911 mo
364.124 196.655 ln
s
324.583 177.41 mo
318.635 155.715 ln
s
332.982 155.366 mo
338.231 172.161 ln
s
0 0 0 1 cmyk
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/one 
<10bf317022f1fd4d6e28ab8f20027880c03e398fe031bf053f0c386183a0
0f5409c832fb4a21efb90394cd8b3492493621e66897e3078e393154d8bb
> ND 
/four 
<10bf3170573e1e04ef4f3e297da9553938b14e30db682b2344782c8dd75c
cbe683ade7bac3ec91a4a9439ffbc16c65b3b8fb038a78cc436dc9b9eb48
cd0a24> ND 
/seven 
<10bf3170560f9ea7ee01a751cb02c85daeb3965a530406067539808c4b76
3957148ffbe76cc9bcc8699090489b234136c0e348debdb76a1940047542
969493fbf9a3f1f548ffdbef569d597a> ND 
/I 
<10bf31703962678dcb35549708631a1cc34088913dcb05d34460f2> ND 
/d 
<10bf3170586c67eff3d5709368e371d37e401f883d104e02b68d518db958
f1f0a6e2bce254ce666674f86577dbedd52fced9645d60f4f5fcbc8a8b94
ecf424d96c63bffe4d31a23f08e8aeacef2110eff9a76e31a06becf889b7
478c2c4d194221919fd42c3f2f5003c6e99186690014137570b1fa7af181
f8905e9aab128a15fe6df552ab07972b9da552bc0b1a6fbb325a6b8a6ab2
> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 49 /one put
dup 52 /four put
dup 55 /seven put
dup 73 /I put
dup 100 /d put
pop
%ADOEndSubsetFont
/Helvetica-Bold*5 
[
49{/.notdef}repeat /one 2{/.notdef}repeat /four 2{/.notdef}repeat /seven 17{/.notdef}repeat /I 
26{/.notdef}repeat /d 155{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*5 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
170.008 22.7451 mov
(174) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
193.361 22.7451 mov
( ft ) sh
/Helvetica-Bold*5 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
210.461 22.7451 mov
(I) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
214.349 22.7451 mov
(n) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
222.899 22.7451 mov
(s) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
230.683 22.7451 mov
(i) sh
/Helvetica-Bold*5 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
234.572 22.7451 mov
(d) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
243.122 22.7451 mov
(e ) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
254.795 22.7451 mov
(D) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
264.903 22.7451 mov
(ia) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
276.576 22.7451 mov
(m) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
289.021 22.7451 mov
(eter) sh
249.701 188.958 mo
249.701 185.982 ln
246.202 185.982 ln
246.202 188.958 ln
249.701 188.958 ln
0 0 0 0.3 cmyk
f
249.701 188.958 mo
249.701 185.982 ln
246.202 185.982 ln
246.202 188.958 ln
249.701 188.958 ln
cp
0 0 0 1 cmyk
s
290.292 191.058 mo
290.292 185.982 ln
249.701 185.982 ln
249.701 191.058 ln
290.292 191.058 ln
0 0 0 0.3 cmyk
f
290.292 191.058 mo
290.292 185.982 ln
249.701 185.982 ln
249.701 191.058 ln
290.292 191.058 ln
cp
0 0 0 1 cmyk
s
save_ctm
restore_ctm
146.825 233.048 mo
146.825 263.141 ln
135.626 263.141 ln
s
596.112 218.32 mo
600.321 210.652 ln
601.234 219.458 ln
596.112 218.32 ln
f
[10.8 2.7 ] 0 dsh
596.112 218.32 mo
600.321 210.652 ln
601.234 219.458 ln
596.112 218.32 ln
cp
s
save_ctm
/Helvetica-Bold*5 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
0.000213623 268.039 mov
(1) sh
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/zero 
<10bf3170586c505b39d8b7489a4a7bdd5c2e7e8506a883b271e5eaf074ef
1da5d8e39cfde2e72efac1db60d4cecc3668563463a5a07334e7e1d6b528
8137eda4d0dcc897d7d2b9c862da9bb1f704cf8481bc88f177fb67e0dead
cc775214e4f38bac4000cbfc59bacda9bf39729419af554f0656467d59ea
0941827d23c7ee41203d56ebd983957132359c45> ND 
/L 
<10bf3170258c6c1290aa424045c83fdb52e57961e66f456df1efc5d916b1
> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 48 /zero put
dup 76 /L put
pop
%ADOEndSubsetFont
/Helvetica-Bold*6 
[
48{/.notdef}repeat /zero 27{/.notdef}repeat /L 179{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*6 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
7.7845 268.039 mov
(0) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
15.5688 268.039 mov
( ft ) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
32.6683 268.039 mov
(B) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
42.7763 268.039 mov
(ea) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
58.3448 268.039 mov
(m) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
70.7902 268.039 mov
( ) sh
/Helvetica-Bold*6 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
74.6789 268.039 mov
(L) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
83.2286 268.039 mov
(ine Height) sh
restore_ctm
save_ctm
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/parenleft 
<10bf31705fce2ebcb08820c92108922914dfbe5b42244b98fcc17acb5b9f
ec24128dfce68d57fa5fbece8e252b00d4bbc18e3579fe1a7495d8f9ad60
1b46f881afc110ba92f3b1498ae6318953d99680f30210> ND 
/parenright 
<10bf3170675b06f53495228d1e7db2393c7508035621f778ad8e5903f09d
c596b1ddd012f3e1999549ed5c31c71d8a57c0e649399ece9483017823af
4e46f27c1f6dde8b114e9bfc6803aa3111697288b6d1e2> ND 
/N 
<10bf317027e8996de457f082ac74738bd91f58f6ac7663661b65fd23a962
05efb7efd9487e454453f52d70bbc919> ND 
/U 
<10bf3170258d0fb18260f46014fc160f11c7aaed0313db8e7acb5e1cc151
ae0d5c7530d16d1c2773ddfe8541771df53c6b6641c3530718c96356000d
31cf661404d37589929d6de096e6a1dd758567ec25f9745dd19ceaa8c6> ND 
/l 
<10bf31703d39827325dea7bd347112d69ff6f7b012b4362cebf47d> ND 
/w 
<10bf317060fe800d83cb5903b8c49ea2202331196c7229d3456343d96e9a
cfee430f0ccbbd9bb5d425423c6fd3d3aac0cdbe444443c0651d024a947b
78085f3e> ND 
/y 
<10bf3170675482b1c6c24e047cb5f263e5c7361001765609db4dbd6f1b40
132aba50e2fb1c5089a2e20882cf5f7c5d32f6312f4e8ded0f348d4048ea
d35c3414b6b197163cfdd4e590d75256b56faf6e8d9062af600a9e80f9ef
5c88c31bc467bbcfef9db13867> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 78 /N put
dup 85 /U put
dup 108 /l put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
/Helvetica-Bold*7 
[
40{/.notdef}repeat /parenleft /parenright 36{/.notdef}repeat /N 6{/.notdef}repeat /U 22{/.notdef}repeat 
/l 10{/.notdef}repeat /w /.notdef /y 134{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
216.622 269.089 mov
(\(U) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
231.39 269.089 mov
(ti) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
239.94 269.089 mov
(l) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
243.829 269.089 mov
(it) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
252.379 269.089 mov
(y) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
260.163 269.089 mov
( ) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
264.052 269.089 mov
(P) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
273.387 269.089 mov
(l) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
277.276 269.089 mov
(atf) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
294.382 269.089 mov
(o) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
302.932 269.089 mov
(r) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
308.379 269.089 mov
(m) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
320.824 269.089 mov
( ) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
324.713 269.089 mov
(N) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
334.821 269.089 mov
(o) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
343.371 269.089 mov
(t ) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
351.921 269.089 mov
(S) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
361.256 269.089 mov
(h) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
369.806 269.089 mov
(o) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
378.356 269.089 mov
(w) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
389.243 269.089 mov
(n) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
397.793 269.089 mov
(\)) sh
restore_ctm
save_ctm
restore_ctm
save_ctm
restore_ctm
save_ctm
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
183.492 293.234 mov
(\() sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
188.153 293.234 mov
(H) sh
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/A 
<10bf3170560ef6084f2419288374a79db75bec387afc3c92f0080de22080
ce6c713751b48ec41ad3f8a5409e31d7a2dcf5332a0022dae4162a8c3dcb
ba8b> ND 
/R 
<10bf317029572e11a6307f53063436005d3a3ecfff630f434a259181a1c6
f926f29ae568a25c459f1ce727e74bbb0f06838d130c62d0778f9adfe1ea
3e7235671c6c032819abac855ffed9b60ed0f9a93f2201588231ef6787a9
2c07eefc20d44606c724afa797bf9682b894b450d1b86c5ed3379b82baa6
c29dffcb76d5ad6809758686406a2e2de00e45b5ae51439d2cbae8285884
6c595c0dad1a5c165dc500f2dbe5c016578f880882c3d2aa795c2c95e539
31e890> ND 
/z 
<10bf317069b1fd7146d072041113aa794b0ce8e3067c550627b28af837d1
22ced7b71eee6577d37e23dafc5558927728> ND 
/degree 
<10bf31704be066fb9fa5e93e43b6936c6710651117f21f18bf4223e1cae4
eb89cd3f260624cf7dc2bc9468db76b60ca95571562e61f41def1908b835
d6e57dd052610e112d15d6759dfc4b030d1865a16a68f903f553e1d056a8
68965cf0bf6f52caba64884f8471819d5b189370c3c6ee9d457fa43add0d
2b59290816a66ed44afd> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 65 /A put
dup 82 /R put
dup 122 /z put
dup 161 /degree put
pop
%ADOEndSubsetFont
/Helvetica-Bold*8 
[
65{/.notdef}repeat /A 16{/.notdef}repeat /R 39{/.notdef}repeat /z 38{/.notdef}repeat /degree 
94{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*8 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
198.261 293.234 mov
(R) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
208.369 293.234 mov
(S) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
217.705 293.234 mov
( ) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
221.593 293.234 mov
(S) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
230.929 293.234 mov
(h) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
239.479 293.234 mov
(o) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
248.029 293.234 mov
(w) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
258.916 293.234 mov
(n in ) sh
/Helvetica-Bold*6 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
287.681 293.234 mov
(0) sh
/Helvetica-Bold*8 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
295.466 293.234 mov
(\241) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
301.063 293.234 mov
( ) sh
/Helvetica-Bold*8 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
304.952 293.234 mov
(Az) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
322.058 293.234 mov
(i) sh
/Helvetica-Bold*4 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
325.947 293.234 mov
(mu) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
346.942 293.234 mov
(tha) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
367.937 293.234 mov
(l) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
371.826 293.234 mov
( ) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
375.714 293.234 mov
(Pos) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
401.384 293.234 mov
(iti) sh
/Helvetica-Bold*2 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
413.823 293.234 mov
(o) sh
/Helvetica-Bold*1 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
422.372 293.234 mov
(n) sh
/Helvetica-Bold*7 findfont [13.9967 0 0 -13.9967 0 0 ]mfnt sfnt
BuildWidthShowArray
430.922 293.234 mov
(\)) sh
restore_ctm
[] 0 dsh
334.692 43.8496 mo
334.692 111.733 ln
s
332.067 111.701 mo
334.518 120.1 ln
337.317 111.701 ln
332.067 111.701 ln
f
[10.8 2.7 ] 0 dsh
332.067 111.701 mo
334.518 120.1 ln
337.317 111.701 ln
332.067 111.701 ln
cp
s
save_ctm
/Helvetica-Bold*4 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
239.692 137.292 mov
(B) sh
/Helvetica-Bold*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
249.802 137.292 mov
(o) sh
%ADOBeginSubsetFont: Helvetica-Bold AddGlyphs

systemdict begin
/Helvetica-Bold 
findfont dup
/Private get begin
/CharStrings get begin
/x 
<10bf31706ae035c09077ecd326105f5deb252902faa4e1a8135b043e2a94
75464d3831c22a892891291da403090cbb818a2de68fe1c954d17148ad9b
7a> ND 
end end
end
/Helvetica-Bold findfont /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
/Helvetica-Bold*9 
[
120{/.notdef}repeat /x 135{/.notdef}repeat
] /Helvetica-Bold nfnt
/Helvetica-Bold*9 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
258.354 137.292 mov
(x) sh
/Helvetica-Bold*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
266.14 137.292 mov
( ) sh
/Helvetica-Bold*4 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
270.03 137.292 mov
(B) sh
/Helvetica-Bold*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
280.14 137.292 mov
(ea) sh
/Helvetica-Bold*4 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
295.712 137.292 mov
(m) sh
restore_ctm
[] 0 dsh
466.692 66.7915 mo
418.691 114.792 ln
s
416.69 112.294 mo
412.484 119.966 ln
420.401 116.006 ln
416.69 112.294 ln
f
[10.8 2.7 ] 0 dsh
416.69 112.294 mo
412.484 119.966 ln
420.401 116.006 ln
416.69 112.294 ln
cp
s
/Helvetica-Bold*2 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
438.692 63.4971 mov
(S) sh
/Helvetica-Bold*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
448.03 63.4971 mov
(hie) sh
/Helvetica-Bold*7 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
468.257 63.4971 mov
(l) sh
/Helvetica-Bold*5 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
472.147 63.4971 mov
(d) sh
/Helvetica-Bold*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
480.699 63.4971 mov
( H) sh
/Helvetica-Bold*4 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
494.699 63.4971 mov
(u) sh
/Helvetica-Bold*1 findfont [14 0 0 -14 0 0 ]mfnt sfnt
BuildWidthShowArray
503.25 63.4971 mov
(t) sh
grestore
grestore
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
%%Trailer
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
gsave userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse grestore showpage
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 9.0
%%For: (Kees de Jager) (Jefferson Lab)
%%Title: (HallA.eps)
%%CreationDate: 10/29/03 5:58 PM
%AI9_DataStream
%Gb"07>B:cSQ6uC^&,@=,7;J.T+>`p:U"NR),VIUc5p_Q4RT;#PN0[-_8ZXZJ'J<@ig?QHAq7bm/&!0W4g-2T\Tr<c0iU1^`ppn"l
%q`!E6D]Z)8YHC*kDuTH9ET@MnHkBjk"QpTYI.OOC5O\#q7GQ>@VFJ+mX\BBp^%@T[;Saq`D5G\Fc1^\3]7,!MGI-,]hk/]jDsm&.
%/(XUBp=J0]o:,%N!WVJ's(V4H[GAp!s1S;P[(b4#p.E)G]Y3-.m4SFL>1/=ua#h-"]Ackq]&,Xba-SaRG&R,e:V4;gHi/:?bgI7Q
%Ri<,gpj@G[iGN`6nT-<`(1p\8%mRf,_qjJG8m]TZF01N2h]F`uG1'!I@W&X,p\XpLrPRIRiT;c-D8+fmk2B`mGMQ^b=(ZgZn`I<t
%b0t+fl2AX3#$"j*RMM^(\*$iih>,=O@Im<K-"0Pgs3n[>ra!?e"b2$8h*566?HTeG0%mXZ4@jC9s(_;t+RKQU6*6=ms89cko^(_U
%"pA%mb?Fne[<Q]&\bfD%j)Og10%sqYPh!MbDgpPk\0?4$DQa"k_Epman($iLUMtL`<d=^4TC1QS*qp2&GL;\=gP9\TdcIB2!:Eu=
%$9EqA9^aH\Q2DKu*?"Z;)gM2L'U>dD>_L.Q_TJMM2NsU)H\%N9MQ_5Zg\p8C8*P&j.pO*`CG$btU9[i,,,N@cQ/l;S:HN:FICe/2
%p0I4KAp\\!E-)'LmE;Q4%dNT?_lKiQbNOe5(=?6<rqs:`h>QU7$M),tY*G59hH]LBh\ET%HbSBV*.-N#J$m)Xc/"02"!h^_#XWuA
%<+UONa2c*:k4A"9R/eo8l#q:LqW<8?d3G.91.Z-W=*eI`<E.NuX\Fob?flQP/@7u*JEfk@8OhX7YhMrt=!+TJ^WRlHB=PE(2n-E2
%T6K%FmuE?K]I\t?@GksNrhH,=Q/pUqrhm+p,0s>W*=!rr<;I^1HWg%@e]g>GT[6:Vo3/^(m/$;6k((hkanTI"b^1q3]taB9ce<_0
%Ok2bQlBq/:cW?IF]>aL6mS<')MXD0`MMJga>p2P)IkOhieQ7.RI+l7M'j4f!4;@hC1_$;Wh,m=1W\-sn0!D\o`T?,snIDrB/(FIV
%k--AUYIWH%f;Gf:hsLj'rVgg.E-Luaif+MF/B^(#AbZ1b^N?<5n$gf7V=bkuFJmJ1+6j@4C3t/Iq]OEnaBE*U0.Mt`"qGM>5Ipa!
%lg5,q>[]uN2KsA7cg2P%abEXi8$Q5)NML6-ql$(b8+Bnb`9kgO2R"i8qlB&=_bIDNg#Ob-MUg\Jdh&r><\d2ji;2tYIsLU)F!lV0
%0=.\WmAJ4bIBi\(p1(@RqsN`XJ+N+"_bL5ad5,QXXIiLJ`BR]!,pc2;rh]?qd<rZi8tai1PEZ;@p:KW$%j-]G5CD5_\bHurHg!]Q
%hgMc?]PK&]$ft`>T6hFHXoWHZDEi1B#3B+e.]FSkD0P_gZWH5@r>"Poj%`G'hA;oD]&l1^o/H/e!2H^<#Ip$8s&F;O_\'d*7AdM_
%mDn%ZB[Q4MprDB$r^4a0W&4M.eYSAd+2ue-h>Vj^Ie>47If@m0^[8IfIh_@SY*C_hS-[dYa20(7,-)e\`rK==+I,4k@r]3Z9g!uf
%$g.j9?#dZ>8TbWf6EE^(5A[T1(aGnMb`W8T--DNF['0C?]7:F4g\nuY=L;IT.j!PE&qR&tdDI<AU1Qbi"O.;s,dtO)iY/kDW/s^3
%UT!cfORRXKk`nub_TK&1383($a]Ej69&A1j3g4$86p&S_4Ge<@KqSiB>noZT^igkF$[j/=4$b[sGM@4e^Y%smmWYJG5EtC#YP.i*
%c0>>SN7HN%(<0oJ]_K2u>-"C1?+`#Pm\Dd:H6n6,IX4Wh%4X?8=.;fG&UHjM&C)%67-SA][YlU@nXXb(^ZE"?88h1:88eRR:T-el
%().9`#]_2UXc5$"+IJ6o-tVrJ<:O^%bs<&16*RTae-gQ'9Cb86)OE/Q;I8Q9Fdc'Dg[7:aFKQUH:0M\dT`abrd)63a!??XkA,B<`
%)MGZ&<t&n6f)oM08fDn+BF-'aU33!5L/shOL/r<5HfPJ=+hWLA[]ETO-jN9n7bAHXeqpT08M#-?IN*\D`3]SB72$r?1tct_gNKVn
%&h?;5V#/Tj]&]Ee6+A0TQ#N`jItZ/l$IZBP13Ur$-qg1d6fb6:%]*)mZ@e\T1j4O+WcGbHmt#[hn<O,^X<fA"M65,i!3;kXL]Ce4
%41l.OJ,lSt7VDlPU.q<9FCO!JkBWh?#,?'I6p_2Xi!sT`;%Lo/fg$Q5\3gc1ZW,okiJPE:F@?lUZ&j*A&1>mQU'I8%#RFB[LR9Jc
%b"1c[-RFL&$I>AV\R:eE6d="dpUm*n6-k-j?q#5L$QhM"p:O%ab-5dP^gHoWLg)#ca69mSAZjWioa+gjm^2Ws8)nuG2d-Kdc>@:+
%k3;J`'o(b68B:lmd>/DI;H#;9MF^W!S;;bs:/%PD7)>.YB^(1[gqYrbDrJn?-'n01+d49ok<t^A)(Mj1<00$U2Z20"F&!YDU7>Jf
%=6Qs*4"I2NMfQ+tnR+>l"F+WP'B8+&<K(E.W?#_-Q\Tj#mud]kd4r<J?/ePN/eu;s>*oZ*"2,Ep`!BS?*6<2-kTQDH&l%Rda/dQQ
%F=6LHONTrI96k0L_1YiiGhGYF@0L@OD+-Tf;RTH>^g9;g3DW9Og'^<i=KC-!HHN1X&uq7K_dW<Q,=]a6d9K7CSV]5EF5%,io6;Gg
%3F)gt6optQV%u%cW[Pic\V"K`DadBH0o0e9]uhMZ2QB2&</,AWFZ:h((fj:`__>+`A6OTI!WbLnNM++X<R!/gQf9&Y:Ei'V=\itR
%=7@@945n.$-%L=nWVLQfSj`ZEe7)h4&7P9\XCshLFe.uiVZRT_Y)3.]P'55=pn7kC$tm9^qCL;Nr5.pEdA_`Wf/ohUF"k$iN"PKE
%`#)fX=d)=JKMN-b=p^mE_"^2\jlO-Qj5Z0Z;Q<UaTJZnt$WHk_WU:EifW3>1'sd".U]`PWoR#N4cPCs0/.V*pZ4hH4M]$]Xk4`))
%"`S1/l$7E3C.$&ij?X+INukR<2]4FH;8<T('/25,0AqIE`QZ`X1ft/?'9\"7LP7RboWO2`NP&!Y1P/I7%mr%4+XOBUj@qJ-#\;25
%!U11b'+.?o#n!q?QD,jJkYlG3($Kg2\ngLKmt;Gg*W].scn5fVMpNd_j!XUpCB7`Nm335_q@Z6oHYFd`Ck2Xc#>,W279DXH=-#DT
%'7GKG.*mD.0Z.1Y:'HdK,jM_0aL7qio6AXlGgSlM=pg<=Ig:2IJ7eA(MZ.T)V'Q4LM9i2RN@T`?nLhn@4l&<u0N!c?BGjanfHH.5
%>C*G<<1d1L!loh`iK735'JR\G#n`3="2Z+3f,7oRI+>m9_R8;I$Yu7P3=)$6d6_;9i%O-U828o9la4OD0P-PRct'<d0oWGp$YmC'
%dT1\!\[[8@M]uSk15mXV?=YZR$4Y#uGj%#*JEUn+m2+t<#QcW0L4^9V/P!!:*'GsP+U+X4>`0!Xi53>]d>/+Q.r#fO/gH#"o13_f
%+a`'ZqiS$4)pRF9cI56Rc]#t0HZ0f6e^Vr=\2p('hHBI^H<,?*/U]cJ8LS!)&pQo\`d8X":9An&qPM*'hZHE.b'.Tf3N3A*PEO'+
%BuE[V&D!d.<K9g>P(BoX>ENX%kXe*,d^L$H"32)2/8NfcaTr/G_7:-f/('?n1(h6^4A#$;AB9r)H\H.LOJ*eG%Dpj8p#ce*0[@/1
%Ub0I6O\?=DmLC7uWGJd7*^&]T4C(gkd+u)D*0=(Up,kHmYr2(W3]o.X2IgnA9\j$I:PFuul_u'?&-m0Ml^BR=KPg01pSI.mT%f[>
%iTm5d]SCd:Nf'g0Ztlk5c7Mb1B3ErsC,a-"k*[WO@0#^5DBn+m4&><+cqDBGqQ-.H:/iOaUF7%VB,hpB97Bhq`E('-^7u!dW:QEc
%MkO$k$g4I_dA/hH=DV2hqL*q&<#g/gok#>'0R7\GdGBIMiq`GH<nc)(QBJ6c^WL.pN9q@RU^!B9kG-mres3]4%-8/N+fZV$+;S[1
%g:#WsO8;5!ba5b8Mp>sj/7jT1%0[_,;2&I+!`DQ4?g0o;%`TJ7@#>QpGWH9TDDn(QDnql/'@E>d@D^ilGKi,#WC,fqj7Z11kLqHY
%*pD5260mKi_6;e`O\1KcO"2G3"9C2t:u"b>GpK(S5MVr1%8TiIAIAqS@96)r$GhM,N"]Yi#?QP%a,$+OGlSB,$=&`W*cQu"'kn^*
%6bCE$HKr"mJc\:_f)UM@)'6VDEY)-e@2NVO?@fg=CcGD+K`Ibu<5-\-Pa<d08e]SWY(9/'hFS(e6UpMtjsVMOlu0]FJ/+AoU,t%:
%V4%oC*uX\^Pg/1YCAnBi<NjWU?C?;W64>*BbVK)aJA?\':_kj@<"n(hK+P(Kg'(nJj?Wlr0-iZS2R@@S70>4s$gQ6pc"2c%>%]\<
%4-0Hn7hfd<Paoh?_O7OjU3RVrUh[SSi(#jrcE1K3/^lnBpqbF$)Jtm&X%l?#nOb.f*MaVa#*Oi(rmW3UXE&9%a9\-Far<(NJCKFt
%,c!/h;>Ci:JFf$=/N.Ee:d&5;h?dCh9ip?sL)P@j1/R][e94:JRLn0t#Z\oB4:L#5UrEm1E?m'3MOo+?]EKqQh0E`DiF=N=!mYtX
%6Y<Y^PEtEo"U>]`#9qYkDBP+F,#]^%6\\hKAVNP:U"2?T.D0E.N40q`X#(d3\4Tmhe;\e"&Eh!@)^R1#B=YA@dB"ZCK$/VK-6k?G
%LO=kh5;F<EO+i@lVQ$l\640rm?UC*c\Pq,*[o[uEMpgI]pmC>jaO)\OL9RlPl;YVl'])0BbSX'Dkl;lUn<tMQd8WsM3K&Xi$%k[5
%CII,AZiN%9-@)_@<\053k'D5rRdZci8ThQ8+U9\,2)I:Q3ckWo2<Zb5r\1CtTZ8rV&!G)&KL,HgM.E6`YcZXDH[gpj1C+gfad&gK
%H]Yjs/j?WOP!tC0+(Sq+'k].H;/$SE0tCqBKD?)BXr7Gm1g%kWkQnLi\E7lred=CVKXTB5/QGc+i2fA%g!W@Be3k?K5QWE/KJG_f
%O[3`P2`^GNO=]IjO:?k2d_,pG'UiG]"`be>e@?.C*<a:$nsL++M6S1NQ4i>AP$O4qJ4rfb)'b.LEr@g_S?)82i^X2o*I>[ieHu?'
%+cR<G->San"IW]?KGS#PRA!#&U=iXZ,=Sok[7(!_hLS!8$dF!r;9"lHDU(*^?jd.5<tqLoJcq4uQ4cp'`d(%?V=9@e%p)iq-]Te`
%mc`M,'sgco)`l@PLB;)q*?7G&=(Uuf+7op.R(F+QMlM`ci9ioh_b3>MLa/]%;]"2)DlkQ$Es0<XV\kp)_6G'/Ve;a@F7+Ui::[.9
%!mM;&AqORVTV650L9%?nIXntKbk*rB)bsVDQliDt6,br0HKC[AXrR5uH/dpTo+]8L1\Lj8<cpR43`>B3N?%LjkXWkhXBh\NF"!\/
%/.r\^cN]cf)I4d3Zf&^&9QN^p9Ldmr(@'c`RAF+&"chqO2[kSC3S\o+)(oH<1OCB^:qdR[L1Y5lDQR&j9eMk;7YSjA3k_EtFj-I$
%&WajqC$=QUB#TEY+Y[>,r.,_L25?FKb,H5Z-B6NI`>s\d%,q`^\>[m+?kFfBRc`#K:%A`+k+0d+H42=$\4]P%>I$3f!II4;6/rk(
%W94W\ck9g!#K(Xk15uA_'G&&Ci9$gq(M5.ecCn.b'3!)rP+_LKmZ1+:)_>6o]oH0m)MM'ZhB>mB"@5KV$;JS\oh<#pH^krNjj\I0
%Y._])Kh#&6mbh>aDuuMb`ZXH)".ukd(k=J##5Bu4;uFnr5eA5K04@\MM/d0rfn6.T3W#t*!r[kMTU3MuR6'(4bWKi6-3UoBRd=I;
%S)gO4K4Cdq]1-fIJU.?Z&Y>9[DTY3K72DIg!O%=5Q?Qj^Mu^^sPAt)EbG[$9p:3EB[V*orOjVAoS60-=C+lQp$5tfh#X.eI#lS&2
%o-t;!T+aYtRjP%lYjMR=U=#<L`0gnoF<'XId.WqfDVK@G8',>.7:qf9lbTm@J?#N>iAF79;\a#OXGWS3,d6\>j]Z!1EJ&>8$Ql<V
%)O?)nU5BNuYK:/$;ga^^fh`S1KKSRRO;W9#7o;IsMRC_\ciU6GM6L<K=rQ*[$?AUi'6Fsp4jM4O;^-cA$RG]8!^g<<K%10eW'2/R
%6`7I+AUje!+)u%JXH.HY,(HY=!Dg2Y,?9SMU#q"2T.3L.4KQ(PA!NYST#X6=U1]Y`FLc2D6-ghQBiUb)Qf5h%#@f;k!d+Mkk."[:
%F>r%WO1KO6k!WHqeH[dWh47Tee(u)b03mUM][GI'N]sQ@r9t[<l6@&q2&;-3Bu1^P_)nQ$&F:@>=%o8i3eA-jFQa!rke3a)lID%9
%#_<'G/6l\g'Ckli^3^pWLJtFI'\+YbTQa3QSEUcRD:hq"1/r3-@bs_\fsVc@0&c0T#u_c7n\IeobSJF/5?XhnTILD2P;kf=,7"@8
%7%seDBa9g$6riuk1[=I[b?Y:Le2IF2Dh4*)Z"X!?D0n0;%7lt!CM'k0o:-MGDGg_UOk7.H`H#Z/-W&/PAfD:(Q`tmk,)^BARPRJ,
%H_`qrN>jio'dFpW3#K_8+u?G!^9Y:fSDD-.;4tcgJus[3XmU66-bEhII"YL-We1`U0\QqVcpi!F"oG&uf.P-#KRfdON]=Qp:FN2u
%(k[.OW(j%5A8&"-fB_ugba)\>N-+h#!>,qE7lmCNlbcr1985-a$Bn4$'b9k5Xcu"a*GMMmLam%/0rrj]@6+mL1pgqh9*5F:\X;Op
%<G;UDK3INd>3YN<<6f0F@dD`]?EWGU%*Xm^lW<rrJhAX+\3odQ[3T#uKHtPFp9;0VPe:_6QHMU6a+t4aKn*4Xp1eg9lp=9C76>;0
%2q-(XUrn]=d]]M$dY\+![^=O7$/`rRUG'k,O_)7bkZq'j7+-i@*h^Y1]8gh<CClS?6sR+\Jc^U*S7Qcp'R4'eC-YV$fAp,=aj#')
%:QNP@R`822*_9.C_h^FPdaIgVoO0D`?fa;1S5i$liU_l42p_/H:SpZCkXQsjTMG':<r[%5i&Rp3%U+q7r<:J?q3#sC-R(j7A1bYl
%$kST:RK3'N_%@TcUPGcJ-4]C"+9u<kQW\QjN\V#H"e4H(Lm"n\K5ase$<soO\mPV6b2cj]/Btt9-DU$If_;[hYNj'r%delt\Icl%
%M(762lmFWU3k;E$#Z\;=7WiWi\IMfiJ*OE4C)\gZN,<'OeR]Q0UVg.g%V#&t2k)?+8lcjR`uKOQ0BO"$,q2s_!#M2d(De^@ns1TT
%S6)mM[)rW=:\h$LG.nV?<?Z$GiiZ#B='SX67I_aoRgS/oSgO5-#[NVi=]gn.4B*n5n\@pn'Xgst4L8n8kBWSAp6>-S5&9@MSj?$c
%k`oO1Qu[l+*"cD8LegRo'?ZAo-DGMb_\bGBTF2S5Krk2WX8Hd7IR5]4BF*I0%=@A`JJS'8b0N8Jr4#i`"J%dDAdK\F?">T]VC-bg
%_*>!AcA/dO.B!?8SMD^G4?S%mOL&dXR9WAi?OAe"qGaonWK8Jmr/O3S;FgV%l(ob^P?a2cF@KW(*U=>LcP#lGP[7C;V=]`c5,Djo
%/lsu8SL^@OV3sSn=%9*e\3MkEBA<-]:DHQ>Tu@-&>[DpH3KmqiJEOIHV#!a.ffCb*$JA4VG_`i#^dX)<f?$t3FMr9\4jf!/"udZ>
%RKZQTXrkW?77Q'+,Oc)@-;J0;#%Eq;.;JI2/Hhr!Csd?7gNMd`6_?hHiCI.8(qOkqnV:ZcJC1!-'2?7Sb=]%t_s15(.,9r%+@'9)
%NTs7`$d5mi<]/Er/H@"qFKV=5R6?9iKIVa*bVs#+iD3>,Be%@V"OT"]"cbpGQCYPjZ<(@`PhF#NVud!!o7[Kg2(RtDETW$TDAG6:
%k/':[$8/-Nq9lH%W&n7.F(Dg`(=P=X>:*5c!T[sIMDN);?Pc^h'Y)6XLg40S$JpiVK70h8j`K`@-3K40`\C^k<TYqNaM:UYUf^?`
%eoO"TR4bX]7j:"XR^m62oA0#JA[IaYB15,$3\+Xr;o55._Vca5`:+q)B3GgiR;AS/;0-!M=3S\KSYQ5M\Up2@=Lj*1LqlHb83(-'
%d5-l<0d@s.q3ma"0mfP67ZhmgcLWa-`\0ilFqojgeG+iBX'/GVKRC2p'Dm0RRtfU0VtsBEQW*]fb.`Uq@%[^Z`T5e`W17og0rKjK
%5G?'gV'\tHeH@'`#U6HL5BG1_gW54Rg(R1!,,S7ra647!4.;]!_SSM3$s5p;BcPj0.Z49479ttUEt+7SffjYU\S7kj&^,Htahg;u
%*>rMb&tCf:Jca!ZNTK4)"W1Z[:+L$>cm>6>VMD!!%uEjr$=^"YdR(h)UBMB@QTq)D6Nm%E.rTO4>TkG@.u6Cl-Z!4cOIFbi#&E/I
%&Cas,NC9"EDQkq%5XlhghN<qUQ%L!a]""<[`g.8V#f+8=L3:#9*W6#pK)0^]XWd,6VFM)0h(4[W7*_']r.GKRV+ZoGF80V%TJ5uR
%F`W9F2@UD2iTgG20&&;Np,l(jVUVY7j`4IB:)b+:?Vht]kZsc8--Jc,lHT*qVVm9d`ckV_M+:M#R;AcUQN7%"l,?QLUC'l9;K@1P
%IR<'nEr(ot@&HqVWiurG^5?\2GZBH-X!Un[;XZ7$b)kt+n+)f\WOmF*7oqQB4bo3<b]C33=OT]?L'@cp$qrYh)e+d0SLk8OILq:<
%i(-M@/*,-=N2HW9.OO5:kiZ@H%l70F6)@necB!;:?2?=fU_V'(<CJ6?18V'i6M<cpHd+"#ZL6OOhlLmoM8XE=/-Ep$H_*@Egl.aO
%<-TE>2oA/t_VCJ)C/"WN&RT3RVU1aEA*\M?:5nU^kWVVi;Uc\!R@@72R(J1]?0d9d[^U+Agq`Mf50R,<RN,fg09;(n9FVUhYKb,m
%OLl=Y9WmI\pK1Y;D^28?JoOM%6s3VkZKK7F$:@LTER+$$*mW;L4c.c!"Z,dU0:82A-"@?i;a'Id.WO0)djn808It-Qi,sC1QkZDk
%;7%hQgh]J!VI1l+P\5H0rYHEo0[jYo6,=M=-BhlP\I#uqB_`f#!e$mEaEcS'T[J+&IaqYD@N.<o=Je."jpdZE[b#Za&sJcH2XNkV
%pt"U2bRmRF2!NL'4pl%22=Uu1N^P9(`t=Y)Ttqt;56s;:B-B6).T^R)NhAUE"IN-,Pg#8m6ir2R(\oo+H6/c@7hScUn:Cej)+>Y?
%99@Y/215oM5jsd^osVES9G4rV[((&/IMQ81_^.*@hH3q2W;OpcEOD7eKl?I5eW4nG7:EHCnVbr1$%+"(ih3i.kU<>?,el),$9)##
%8;.P-7H`[MO<&9<ppB*d\Q1VQ3_rZ<1aSG?H=j;S.4Jk%R.2pdjR6Lj9B;+Lqqj:9SSj#<OD\LD*FDio?-jD\4(7)a6847KN,;mn
%M<Pho$m_4'MuR`B\i,$U`fqCZF'W4S;aI"=7#%rWa\qB1?.<O9C/PSPBcWT>OM<kBX1[`q1%$`^MaS;W@mVu"o[Rs<a`XgL!4O_.
%H4,6^M2U01MNR31UMaVimUIF/7mZL1J1UiZ5XVsVac+ES!bJa?W0AqN(<;;dEp9TKK?Q?=DYeW>^OH^Q=ruluiEWF$C,OnX_pt6U
%AI94(>/EF@!gC5kP6ZZ^p*Z-*Jn9!Ldo8rX&mrf60Wn:i/=ER6V@#Oh`!V`>c)=57)5LfG&pdQ6RXQqNXoq'afj#u6Q&m68T.,f$
%KRtMXM@_$D4]+jW+.Pf#,-(F82rZ:J.^ZFB98P#r@_n5<MJK5"*m0f@&Q9O15X^69F!X'/b#I**pL%fb6T#a\VFj9H2D\>G#jiSV
%OcdfA)*p'Zb;[IA5\AoXNB\lK6rKD.nU'b>'b]H#WH-Q6(5\ENX2;T@jXQurhF-M=\Rn"ik8U0G'r2s/X;SU3@?kSF0Iq601a=4R
%Pi(J#"L,s.`N]\J+@'U07^R7a!)4;B_.VWb$^T":6>pE0T%UBJ^hKM$kLbY1K6<`j$DAA<WkgTu@8F.-9r452\sfZ&$&qZ?@bW,B
%!aVE]VZT6RfQ8Td6E98RIel)K*[3HWcF%,^X&Sa7p[9JP0MGA$f1@QCoZ8q*1@5fsM(G3u<D>=tl]I`0DYbiA<,;[]FokMU\mdMl
%Z)#6R@aSHDUoC-=0_<3bJ&b#(U=bQrr[W%lQoYO^bRaJXSOIUjZXJ>CaYfam/QHWJ.%^0)LI%rN0P44@K63]#V6YL_]M?q'1HIhK
%@%:+>JYHB*3.;[`::Y*\5nH.9,+.0($C,[;A3f_8E3*`7Nf/p>`rXSfP=eY=WF8m`m(H^CrQ8GoN_(fn<,*7N<)uJM?dW7fI]a/M
%2`2!oRdj+PWOF>Jo2RKSWF8h)%*`Pr?c/;#E?0tR9b"FdHf*=%20qPZ2tJMWd7k(bMJrJ`57-=>MjTm$X2CWJ>TWF)hfqaE^K&mh
%7]4O`M0RLSC89>fCUT"5]eF`;OR(H)DO5NnF/sYn@:uhKG'`H@O7p4leTqt%\X2%M=50[Ms4g*25IXMes4'#Bp@n$Mp2iPXgXs<Z
%k&)5=Zi*\=A,e&/WOMCBpPG,i\kD+RKr\:)ICsjXh93_7Y,LCG_jtHm"LG/hbH'Hi4Lnf>U[+tEmI!lhe]mAqZ[I5RXoA)<;RTg.
%e.c,grm]NOBTWa.>A^fMGMC0Uqu,r$X%cYblYkGN[V:-0RZ#]kX6t:6GAYk\D>m/N>kQ6E[:QMor*jfDAT+sB9s<nX>P:N`H.8RL
%>4f'M\l_,(AM5ta54%]<Q\+.5[t:njh2>8!d>RnX(42IPhEC<$]8%,ENTD4s/#dO@>[P5"$^L.i)m-Jj\UqoY?%)MCYS)f+g`8:s
%^TJ9+p2sM6Y)^h/5MbcepE(2'kZ/u-E-;-3'l'nDGLrn5iu#FrP\[E\GF.cBdZcEtmLPfam3C,!>@8]Fr:[lhmdAKEbF@Cl=2K[g
%c%3A$Rh&tup/7TdomVB8K0)N^KBVLsmVqd%hn=O'IOQRdqu,%sH@@M@]3?<A?lWfkbEoQc%=$t1;G^Qa%_RmcKu@f7q4VZr<sMgb
%jjg7Z0M"jDQKE[7n(ur=F@:7=ea7!Y95/*[k:\a(=M;J4:1k?)\$']2>rS*X&rq/`C[X1U],"!;OJ37-D]\A$9bsei*h/bomZ3Vp
%c<:@sPW[hRr;/\$Ibtq;?46_-Kmr<pfC]"h/b(2?nY^glJ'piR(p3]4X&Z@3%`Vq`]`ZU<mBkMX9;,1e<iKE,5!E;&f\AV2p7')-
%Oi<gUh63mH7d;R3T5feGnDE-;^4/93^+912%so8L2VRZ4ibdi[F["9D<<qsf8?,Kns'MnJCR+2N]>kp3Vr.MTh8FKDs)%f7KT%k'
%I0M$:`;@ac"Wo4sA5IH!IGF2N7pK>*Mf-:UptQO,$j6ro[bbl:>53XP8W\8G3Y,;]rT2T,pFGL_JK%[oDXVHq+1Iu.Y#_dd18oPI
%^p3b#YktXROF^bI1\*-5F]rX"V8D+F(3R#Gh<c:BR/"g5,NA]HECb7T,)a<b&Yun>4s/Y;m,+u<3p:icZG%&/^D+u/%`sVnhC`'<
%^@".%p-\k_GengcMuTpS[uXT$]5JL\hhY<k[8;ACIk8mkcd0m4cVMj<kJucYH$,_(j*<WYkO.,sS+H4;r9We:o^(XTI<L!=T2fOg
%/=qPOJ*,&CR5lcncVMk^:JXb]f;HZeokCfn9rIM<SGH0.C/<)gH#e@SG&hnLEj@kh5,h>XPB7F5_MLKs-hbKKPj@r6g%of=Z<j_q
%fCc^YVfc7"[9pPR?(5uI3'KPj4$Gek3F3dL+4nQ`EB9-#iRf6a@s`$PbPJk8X&&&FH<hWEF^<OsNch:Km:ojp\ua2XZg+nYWRfU>
%<EI_F8l_rZjXXEcb#Dq5:M8oKSYUBhQLM"K.E*!a:G1=2;Amg@=ZhZkE?1*M*NPQ:N$8&],cii->_M]f(/Db==GPp5LFT)2-"-A]
%"WL,`rOG/aVuFW<rNWPSjcba3_E@;"ou<?dgmtuSGN.3Af[[.AZrqLeH0:]?`g-8QT%R%h@b:>+f!_m+7N8G<c<;aGTfG&Ek1#og
%[5g.QE,lSZ#f[f20q^8_U6L3[ALtuH.0M/tcXeX2Yu9:.9j'+JcUCuao6(SH#&G)tg0>c((>ldl6.Yc<UVGN\m;I9Y5#m%G6#F,O
%Sj@k_>m`[m=j5F@Do/-!T,i9E_OqNj8SfZ.H9jLtig"WD=?:IH*BG^s9dr64dShe^NmdMk-u^`%3"_%<R<)R>Kre+n$cSi7$R&k/
%A6]L&:PGn5XqVLQ+gi,L7j3:,@rNu/E?\n5k0AB(@q9/P]Sp!XZ)_CDO(Bk<A5(>Iq')%YaArN"bFh?Cr(<@7=IA&8R,TZea&9Fc
%$Fb9=ROHri#o=Ti2k:4US]12"$C=oS2D8;O;d'G7f#!;[@EDGVc1@qL2RUE)?J%.Cqc:SSa26.M_UiGNH!LcL>N'cZHln(B/!5Ho
%ObXU4MmN8-EEnBo=:lB'JeLS'.M8Id&Z??TXL$sYFX`Jc7H1sN?5*^I6kYPL,#:T^cdq8,V+@U$M=i('nK]\SN,'$g[>=LTM"g^Z
%.AC]KjLp@u'GXH$/iXW;E$DmPm.C4W'O>-9B6_fE;05>T]&Zt8b),>JZa98B\I>8^*20eh+!HIhU087o]NUQKg%i04.!693(%g$*
%FV_@8R[OVqX/>lJ##!HTcsqX<%,/p&UHtg:%g$ab5[.l6<,ea7E_pgmW]DQ?RL0QT02_+&nHCC,W'<ce#UP9kaOg6>Ln.BfSl.(*
%0<V8nTcNYN6RMFs<0L.CJ]\VjdSXRBC#TZ_HG2WdJ^t.^3]WlT>uR(VS(?)fd&DkJ'q.!V]0a7nl<%_&r'C2*(F7WN<UM<d/emcC
%aqs?PV@&%j:/o/.`I[:k$JA9*6S7=/b2aQ-)%%93qNP_5ML&!.%<YrTAOC/Z.W23Q5kPQim\n't`pj;iFM?ZuSl)DX;Ql]@>&6k2
%#@/WJW7=p.eO#=Y(i-7q'@BY$5mh4s_a`#1UWHJLM>"eh)TC#(hs<e,c%;(nBajH[lF$ZACK[i(28ms0c=?eE.!(mp1B[UJ:iijR
%`k"+_MpZK.1#UM(Db#13k)4E0T-!^(#+e1H*r,tpri*_`HMBu=d#S-PnK\K)`<8uCJM=rd\X6fY.4_cOZYCN:O>WkLaYKp;e*QY*
%e#RAi3kjnUWq1!AoRGBn<ZbGW@.Al'nEL:[/$.%#]#3eEX%TNhZ+@p6(b]E-eMgOt=T)b&OOZj%03S87``#oFRGP7ES`_i)V_hE>
%"mnTML4eBbT!S:=oU`DhX<+bFd-='#+0D-AqU5#5(YPK_QWfqp]%-A<-mJ/^e[ME"Sc*?sYgpcp03eDA\=fnY38<_9X2D%l[lW@1
%G,sZ*Y.$ILidR6Wg&G(`I(c0dY&:a1ip)E%1S3Fm^54A,=R!;RWAS;%B=VUqdS4XT%2t\S$2dH9:&t6coB>BGd:a?q^XRnA3oc%g
%n*R9aMYVHn/Nl%i&M%.PHCs1P$C6a4!U&>nTDA)nbO,<]^u#K+r)gW-93GL4rl`W.l*YZtI\OC4!l)o+!5A7lr-?PQJ'Jc%7-+[L
%jlH5U/8dl@ML7EtK<YYJ,Hn\1ei&?G@K_Vs\V/W_1FUkj7R_r4]()7/fViHlbA'k6J5II'VX67FEEDF&HN]97GsA-!!ulH\)Nfc)
%;5*'JUhO42d6B5.g,r6p_1.?%Is6TMTA[eoLX5kRrF5H;p!%F,r)%jNGk'oq:IP*'\&F6rOoK!tH?FA?h=$dVAb"6DRE5/G!QJp#
%iVHt;OFqg-TF=)kJ%8gc?>]nVikI+'Q+U/#6r83ZU%d)$^>/(!69c[ao%i<)_r-'nrF,hV\SZ-[\p/5chk4P0jF@3Rs8IQKk$fDJ
%07N\7qP2O^c*NEMdKCIRF]?YIQRQSO)_rQ9%SZtn!@c7#^OEYrj%NV'SUT.\]=.\]<S-P.(9MjP%o)jW`H+j"4OK@!OYgpnoUdWo
%a)(g=#+H)=q9K23AJh*Sk4!)Hl;1)]KTd;6UdNoP;%eqR4("ZMYc'=nTMsrGT8#Ltld2Rhjg6gT^GBq:Bb4-XL:G<S7`[-u"J%6c
%8!+^aPemDJ1W;p3W$QC--L6_comGEf7@MP(B`rD)hf@0$EG)1tSTM4YpTkk5F54rn"a[\cK%<F]fq:\[bi+aGTncMrD`sUa+/_ll
%qH/`JR6HK#mnJl"Ijo7_2*/9*'>ZPD7W@`sE[Tj@[W3&/Fk'TboL27H2ph\=U/D,nR<RAI:*KV#f%`Zm#Z=S]jKXre:<n[T(C`_d
%+R2d&V$CL-[8U3K$$;6,6Xc6$$l$cZ&esesgm]0-_Qb/qZR+lJs&!QL7ZDAgdo[oa8LF`Up,-&i-5&jUQq3kjM-qj3@DWBS`5rBs
%]te5R0p^s)eR3!26[u>,A,O673bst4S'__Z_)B2+G5>XKpqB/EN^kJ<P9IruO3LIf[6HfdSb.N(1$lp,=S3@oR.W$XQqi=7BlK$p
%7'8QY35KYe>@o9fI:)%/&DYKQUXNq0DV/Yf3k[H8LR[[%Vqh,@63V@>Tr(!;UH41p7-'*?fHE;@]!:;CiAm&`1QoDMoC5M+O#7uj
%0i<3Z*h2,mR=:)p+$27*I@2d$b)91M1;U>]`Nbaa68ZpOkN+7dSKn^$NBWXk3UEO:`;/6[lYh^\D^kO'h$/.!/GFK8fF&#KqI/\8
%L1Gjb-<./)^>(qn#3G";pA=1M2iAJWH<K<Zr?l-:4r3Ira8:q:l^Ji57>D';,AdSpmiM>%^\A9fqfM^@6iU-?-_()6MX/fq[WB^>
%4E'-K<8B4AnC<g-R=!QT;>ZfM)IFErU""O8I<j^.XZsEU0<RJr^i.!'&=L;%K@<UT&"CNsDcb3Pi]I.Nic;<Kh.Q_I!F(2Y^6ckn
%UkN9!p[IT_F*Cc'H*4e/mWOrS(B<JV-*]GnqO(pP;2.m]C#A4?U:*GIX!N)uI'mdGJ9eGf5.A5g%sON/qqDS3fu`Q_/rTV-^ZTd_
%@^VNLeq1@jTNrT[*qr@\BG'SU\b^T\ab>1iI)+J,T/TkfH1c@s/@tH81O<J+kJs-4eX((D&^I;_@kH=4GhhYh*^1AV]2-%egN>s\
%fAl=,DXKE<SMY\CG'LL.4PoP34SSi1h<-GVIJ*C'IeUX@lQ,R'/DKjhWR=!5pU9TIUHHNUjk\2YX8VJ0-3$\-qW#*HIg$26S%Hl"
%-%?Fb^KCI)k$db(0RVJ2`Qb=:h(?RG\@NH!38EBG1Ei$Q*`qecJ4&kE3p0SVLWA/@`kL)QhVGTm]-_jCp\`g)L^lFhKY)K<Geq7N
%q6mdu[X9CTE[8J,M3Y4D7i.s<EhM;J\@iVIict"'5eG'\RL*8si^;"CraA"j=Y>,iVEh7ZbJ5?#Cg+iY$9U;WJ[p)@Ypn0+[K@/+
%N6OiT?qoI8RJ&6Kmi"m%O%U.jVi>ajYD3dn(OoW<`J\Ym?iI1nOpt.n@cR##<\:D.5nJ5`@(Z%k=:_H(H[VuIO`')ZKWefaQ-62W
%9k]joT=>ke0J@<5*>F-0BT6kXk$Up>Mja;8==(IY4:p'qX#c!5C"9XC2_HP])OO/jK=u8HZogMhS:rhC04roWdAk38EPT^tQ$ER7
%Ypn>#Md9dQRr8\o)THM5f$qC#BlAN%Os.k+*mQF0MdI;e^Pk;HWJ=I]lX>=S/pq@i$gV4YBs3RtAOR;X[)1G!Wg3iZ$TVG5gFD<c
%"t#k"Pm)P>R/Cc8>g0Q1^a1U#$7^=D(#9.^7[46<5`^`Mr#>@i'"PfDB3'EI>*!PNh(mM\&&tr)QEKB/]@A[fgmFjj\L:RF\q,XA
%.Li_g<6:MKG7(uA<'2s+g+0_O`>"ZPFKSPn9;?`!`F7)WV+KJ?fdnYMB*V*&&t;08_.rB@1BVB,?Hfe-UFX>IE8rn9fhh6mll!CW
%$Yl3C-@Un]b+hO8%FqqHBM3Qs)ARJiM,oj@8b>HREnKk&kBP(:F4+0EUKchLF;dnMEQc-\\%NAi6o0<rFKg:@D[aq`"oDVeUjRkJ
%1=-5j[Cj23b6n-*66'f*+*s>;pKnU?p'?mA9jkakM@LfeMD/!hM'U#NE]h47Wu33I`;X+oePJ9#b,#gGiPuW\2M.2lR,t+V%gXQS
%):1Zq^`u-a__#2Kqt6m$0-i=p2(:A,\POafs%+k.%Je-?q'cV-%JQD-6=V+H6P!d_/$O4.35mMnaR./`?qoI8RJ-Is'nnj(]N5s+
%iS9SDP_Og=0\iR5#*IZ,Zll^pE?&r[?LGEc!AtTFVJQe3&So5-+NndC4h!PFeJtPui$A02._08o0P48g`_3T*,qK=FZa+^WQIpfE
%;o#WJTo>#PN^Z-dV<?ef7Vn?g:nDg@9F2fd@jnl(]9Ec_M[TW)#1$#M7)u8mT*#B?Y`0OG%pE!dbX$n&'6^@mq9-s3D.[BGfo0BU
%VBo9ob^pK(c0a/:!`eXM6"4%"c6hmXS,q/LD+a4N,Y5ilHS8,[(akITRn/BB_(LI`+;*k,#AACV+&<fD!Egp^_S[RVoujWF-UAJ7
%J2(<)M3$$\:*iWga4WGHmA,ru#SCB2M2d(^X],Yge"VOV@>:cj8h_X[@hZQt9SCGU_nCSdF^t`O]HJ0\Utie>"gG!;].&Vpi'F4\
%9K:"!HXbLtU;!i`<\<[r\H=28;)peCU4nG%W;,n+.@).GX9@(5m7[Peab0kQP:",h[AW-(LfE#+^BYCP@^5fk/&fu=PoiXb"`N_C
%Cb=59:>@I"?5pDXQ'dT!GgoM"Acr4G448r6&JI[Qf5.Sn8PRBf.qS?Yc(2op#+pI&-;&$`lYKRuTN:7V'9uF8lg?$.KRJQTR_$D[
%!;YhnE'pZ3)VBL.3UB2,A1[kZCCn:[iq5dp:>#DMb!r9JU5N?b3:EYsm<^N;NOrA*\]Q*OKK21a_?b5PFDH+NJ`eQX@H7+U$tL#d
%rBYOo0XRDi-hmnEC,&R7@2$li[-p7HcVui<-Dc"u!dQTWY.SOt#1PR1DWChT_%9o2G`;OJiOBJBE,.Vm:0>d,erV)oNos*\_5&^(
%HU$!9^@,#.X';1_A3.I_W%rQ$qTJ"Z/:>H?O;Jt@/fnJa8iM=h@#`oN7/M3b^iBY/i3AojD;[*OkY8+1@^#sRT``F&4Uslm+I[FY
%c%;CA(XohhI^^^?LM]l7GD@4'ShfK'#/$!!N&k)@r?@N^.!?*O@5)Q%Dpq/SNQZtHAZS:UXDT12b*MI4#;\hd$/R#_^-q<B#A`U2
%bd9=E.]BTQ<Yg;W,Z\A(\G`t:@UE>^;&blg;!j#pR"I8=04roW?tHZ_$B58or)=B^NIiQbCb0bnO-X`.:5i%naZensXJpP$e)#VY
%`#Z_:Y@",kQpHKpF8L@8_E&`Y;>@`.:V_:(2/.!e.q2L12J<%.?NkGnG`GN@Ws7.m5hm)K(sTnn=H2)$@g27WN=ip_Q+0YnOlV8O
%>?Hrm-2sj+2=n$n[nk`DA*%b[q"55PT/5Eu%-_bS8%TX@O4-U9%B*gerV7A(pZUN*H#K3VSd)+>:RZu[4?[P"J<a5GP;Ul,W>#r=
%ef*3Z%66J2>)J6;4W/dWil/:,&OIPn7H9dqnR!EfR/A0EYIbtJ3#HQLefVKfE"3(*gJ0K)ShGGB9SbjsH@T!'lX>=JQ!ViXXG>?%
%]n&3Uo'r*.Y@8f0;Sk_;=QRnboe;cN["WX=2JI)[Q0;Bm(k^UB/>'q^)jq2:\^?RRWHDgMYTECsgDd)D>)Zgo?cC/k\#bupOb*nU
%d@h*BlHNW,*O.V,Y'VnPhB9)gQQ\cYp(ZkW.82"kY]a,2XsFQ3a%L3CWTXa&5IO#eJ6,?fjm"4$\`Ul,XZg&^@=(%dQ"C]$U6`:A
%e%r),$f_`JRl#(<Fn!iB?qoI8RJ'*PQ-j:=YY7jUDU:1D3SR"'LE=OPhbTh#OdB'jR"se'(Xpr).'Yk9@<dr37[Xp0AnfbABjbW,
%`[[-":)("5B45Z5Mja9.=Q*I.#/<ssPhlE'6Fa>ZHrW[CA:,BaGRLjCd5ZF/AQErB9DKY_PCU0K9YP[(7dIKSVg=laM,]nI'I.gA
%BK28V-_9MU0/SY,Gdt$^_k&R@MSuh7k$ZGLpG8c7(\_2b\PbFV*entV#LFXZ_Jr-+U.1X$^-Mi>?]$:igr3O)qUgND2Ul9)\;4/0
%'0((:Zu4%,,`,!&#jET7Xt[[%=p,h>dYAthDFrC[0&CY6oI8'KnmgAu(rsN[Q?=(t+kUk3DC$El^s])gKhB@MB80e-\U4C7YaO+L
%:mZ;3EDSsNPNXh3UG*S2@Q>u]@]IHD%jJ_G%QIqOf0d<V:dI8maJ37&F9X#0oAT&1ZX#G?[HVNoa]^bE#oP(nmELSXNt@F6,ig;2
%jYoIrITt"US&-pqp(4Hs#HLEQ^^1"J$VofOj%@2e['`*H9c0esV:;?!WHLq4F_0>XKtZb16BZ]69">P28Lp"R6LK?*4Mk+nX`Z4#
%`hWh0p5s'hC;`J+FrXG<Z?_HGZO/-:JVr5DGLQ"\&1OX;%Z$(aA<hq%VLj-ZTrT<+@&p(6`UTTbO[^fAY[*_FLYAeZ3CFpu$jXpj
%KfWGo$6HGo<+$KTGU'5a;gt5\2E^8"E5PA@nq<rMT$t'b\&C=a7l\cboUVi!#4\=]fuK4A*-:kJ%hcdK1sQ^DEh">AKk](qBknN5
%PpYNk>+WpK$nBW-B(Z#*Vp^>=7ge4%^Y8P#>ZmY[BnH+<.=,)=%uJVFqh``B9[o*s3f]th':e;ab&jtPoV_NQ_$hW&,LsO;aZKT>
%l<_]AfD#%ibh>AO6n#5dAn3W!&E$0rmVlji2>.cJ8e#UoK/L!"RMQV^@0a#.Hi:K>+^GQKeU*_LV`:X5)3"+P&Q/F%$cm\4VW2cl
%5&B$2i+:pUd^-O58WVGfjp<GfZ#p0$$j,b:FKhn+Q87<V1/)"11+fTUl%f_EG\Ul_K&sQ[1[Rml11KW)%3!,p49pG2_*5k%XEq)\
%K*_(:Sq=?e9\UKhL<+U,1OK?V)"9Xlct6fL=I4I+Gue;_eE(#6Xn?Xbh\+piEh];F4e.R^QDfN1&[6$KB48J)dA4GV<l1Rj=lSaL
%M9u[JP\:0ajb)JGEp@BLf#nYb>It`0,Am3WP984lL!qRL;1/i<V1^nhc+nX&rM7+-<hf2)ps@V*7D0jX'1KU.C1CX*MhsGg0S+@<
%TkSk+iU])PolXGtq`A8e\tahVV`@kO<`Ai(BZ9'A?V>prZ!kP@:?Z)fr-N-J-Ve;_SPGQZ2]u+l&:6_kZq=<qR6N61Q[cpFGt;qZ
%Hq7mkI,2X4C@H!kH"n+8[%7l#i+TW^6QDh&lImRj5T$=(SIj)?h'X*^L(paCds$p68OtdS(aNPs?cb`gE8`!^2B3R:9?Ajs>V&[+
%CY&Ca5NX/?0rJhO[HURT;ch'IRNXrp8mLQld<t4qI*]>FXmL,1K@)MX+X/^:P#>p\)AqhL-rd(I.L[m7,nPfMJ/ARLk=#Uh1LC>-
%(%7MF5o.$:o3>EuW&NWh8M1JcS/+h_Gr>jj_+@BmLK7sqK5*+c?h/U?)&NI-(iuKG2StU\(J9AbWD[J-V<qa^%]3_JW&%d.5*<h;
%PO(<Bm;4coN%(0FK>k)rVG*8s'2Ko:6aRR23-;HsY2TEoWAG<)+1&\HNa`b#d)kEjfV.cun_FN.8jR*_Jaq\+^BW2'UFi(u=c31+
%))>8qCj9*&@tqF6"6pU;Nt(=7bQkW^PN\MC`eh9!bSISK8f:<$q';L@33!8-_[I&iniG"+4JT8cLmB_FNK]Z%T$Qq3U_jXtG`UsN
%=RsqVYTcJEGTPWjG#BkQVqhHBL)GOX2KH!JX/NsT&UtjN68t=i_*h_.`$A\DV1r!VYbpj-9RAoC-c?UrAG/I9!>OW/3j.U#"49W/
%]<Td^V1u#C0H4,4R6ju+@@WD3hStedMM1XP2!Z$4K**J>RoPs`H:+JK?K@X=R)Eg*(;<<E)sJ&+/^n`t8(P>I)"e/17&?"HF9;UJ
%r7P-K4T!R`N4BHo(Qc&j,RusSZPa(K7kd_qeWdDEVXDDsHbI5B@gtBelrM'=Re8BXm?O:9]dtC^UBd"P_cV>VDbSFr/D%S&Bs3R4
%(8`k*l`B#<39q`YL@(:q=uc.^2DrGG,!Han#/FtSdb>fgS*3ZH;F[S$#!s*0:_F"8[`^*1I9>!(V0#C?QPsZ*k$bgg`CtVA!X'Xl
%.;>,Mo?@n53OHY\<iiGZONh*kJE\qfHX;]B(PN'[0!AiW^k=o(bDiR1@U@mDLQ11G=;Nd_@`7gt)Z+\HG!r:'DpBleTB0[l8K_VT
%R:_>t)s^[q$lc4aCiInNFHU,P=.feVC<I_[0!C,!L#ol^1[Xl2<pXCT'M59<3%Zr,\)Pp$>*ViKGHbt-<+jUAYR"-i^%)VGXuLSJ
%.`8Lh(,f5[Pa)%:]a??m?f?!ZogU1Wj/2O6Osu/lb])27ep]e<D6Il,`2-<gJu)YmO!co5i`g1V=2G;A7SN.@@-p;[J0dra2:'-[
%h2@]pqH1^/PMTELY5ZR+;A+22\!.(fFg)@,g1dKC&*o=G[+@gJ`[<2!$(M3VbLYtkmHCde\oWN+f([aJX>E)0aHb7lnJ4#]*g>,j
%aokG[j#fj_"N+++%;[kfi+m!&'p*S$RaekT\ms9D0kJ9sW@*Jef+ZM&ikemJDl"sq2>+MP<pZg!lo3@nQY=GJE>-20ba?4l^ql3D
%Cu:#)gDtPNXi2).8>LlMV4fPX%J'2e$DRiYr^?/lFn85Bl$IbU%[^;idGb.F0;[)>!,l:J2(Qn&`SaYN7f$'C:$BHQH!%1)ZG9B?
%-rGa%(m^p7Z@b7rq+0K\Q<?Uqk??(NXE2N-oF]-5$D)Ac60l2']ERuN!tg/AehNF04mCjS&DkFc9YiD"JHJ]kmtD3EeA5oc(#n"W
%2"Cd![@SpO-e7L(nnS5CJCegDYFIS(\nZ[tGKOEW>C=ADL&F^2*I9Efh[aEF0ks]t5,q\XL!<Tt@puUTa$Kd$T9<WR3<l4/%4X39
%lgn!bTHoJM\KZE<OM?(WAA55Y"CZdE*"S#$%bRqIV+?qKIDgIC7F+s9`96V$,WV'>["0:chLQr(Yad?M(?2^eG7ZXo<RG7;_,-"r
%gO38t@(lqrnZ=)ql/]ks*m*]h)aAIcLZO1Mc.Pi7[33j>#&C(4XR>'-_H:bPM>>L.`m8rja7;+]X!8uN*8-p'R(S]1'6tIu@?f]X
%`-PhGQ.f%!obc$5RiVIY#FUP31MY<?om%5L8)o/2^Y""4l@biMU>Q-D1:$EcKX_QA?dJ/KVi`[Af59`.4;lUi].LF_e,t#.nbQkF
%Hs8-?W2d,H?L!CM$Lm@c'`#+\r=W25UAq@Ola,MH"2Fbp7IT#n_I+9=2OC1loN5D3IZNd:0DP;<n+ck.D"aEn^H=D%RJ^Lnq=Z&I
%!e:!JkjEGp8V)c>qY"8KnDhjici75mXK-:ej"Kj:^T@+dK];YrqaudurgQGMnbNcA\!5KGW4LqHbuXg3BtaKOcsMM,jmliB]-6oq
%^p2/,le`I2rr)9>iq4tDiq6*L2_cGN_&!rK;r:'>nc:%tN0p5pB+r"n<4\*N?7D!+_^@1`oa%EkA5jskJ9(f?C+ht[hEM9@J*V&8
%&g*;Lb>D2;hY#mhDBh"9f,`0362BO+SO$kNGr]5%?$7pgN'k&!q-I]?SF.GAgP;91!kVA&OYU%&;ibmD[Ca=ZBk-dtQ&3DA0C`mB
%pFgauo2]o&fBSeE_)L)AjNP<mADQNq!]Y7WN9dQIH\Wimq=RPSEGTK7NgqWe\?#s^h]PG>_Y0N*JjfepB5E@9Jb@Y6g'!tB*Kj@9
%.HjX8d/kM<M\iQUG9;!8(qKJA@l]h'\KNT36$>q2U\o+l+(^ajN3g!905ZB':P-kpinJIa`=a.<;=4-DZ3U8qmP5i/$\qOMCA$te
%?aD3@U]L)$i^;rhRVf>.9\"t$'/ig,C;oIY:#V2BpajLS^>*l-m)=:[3>ABPLYJ`+qtLkT_6$:6>m+e6^\NDTB^6^5S43Ba'tTtM
%jZSFhT&]Y6*Q[iAg0QjI(G5:9Q6E2]oEj=$Y#Nne9@luJk[)hl>)_0Y>-,bmg\)WTm\.'LN;a'7,77<2h1@I_qD]N9$1FGZ:NAYM
%.)(0Z^;%Cs]%e$u=1Y6Kn!&KFXp$"Sdp_`3f0I.a[]2<TLnVAgbbBgjm(fu?s6CsCLskc+c+M7lRS?n6?o['';V!h9=mLW=Cc).?
%WY7%;\\B&6G_l2:ih?+#dnHd@>6'@So!\Ah5[dq2\uX2Z^$BOSJ5rQSCG?>FOPpU>q^JrVbuM`"/hi?_WuPCAj_F5ffGtnAV$jHS
%c^lFhTIRh$QSPCG(M!Z1ZV?^6-.lQq'p4&"la^g@5,Z<D+T+P@1t"6Q4]%`!\sSnK)Sg`,J2CtWYQmb+Bo*Q#dQG:H;Z7f(.lfb4
%l<q="cf*QoEnuYApA.l7-]0o&Eb[Ai8bIXr,0,EESpC:&0LB=hLhJ$)-)?_co]#-R0#kOJm9FKZRIKk5>?K4q(m.[E.e,So:QT8$
%2I+KKFBSf-Ss4FcOVio?!0J3iN,#m]>V5`Xk/?guP1/B_@2ng)PXETuKkTU#cbI6ie&)pp>^Es<4M8G>3u!1WGpm!I]_UskhnOTB
%S(;$kC5Xmi,G3H%rTC%DXe5=U0E1Y-=8F!)?;rhdZJOZsiqVtDLW>12Rsi[D?dHa5_DC8iaH?Ll3Cca@3og*`r;S/mJ(3LA(5:1X
%mX&9P;l<nA@@ZEf-7"HopTM>arK,u-!X)_BE.qU&M!E/6_7mp"d%'qmZdmS5H(hX7<2ZU=ch5JK>A];cV_ohaL)F->N`el"eGU\V
%p6b0ra/^6+H@1,8k@h_WT3p`IAZ=.F\q:%s4a!;)a8Crr8!rfRi^*;3S6E+W\(es@cSlBJ%F;QUeCS_8DMdJ%r(t&W%:eZCijra@
%427pNCG&KHMNIe4*m"3X#.>?(VN0G6$X;qFo5aG2p\JcK[GTdl52>2niQ_$QlL&QO#r\BeQ`t.)gl'5S,#t)kZY*S\/+ITh=4bkc
%G7:jE]`5LXd@4%6qEh.plqdBS6!bi@iti'Zl@t<p^[r%$^28lTq*HkJT5SYXGN.ehTYCX:^@6N2h<4-gNI:?Bfh^dhrs.[/>'L~>
%AI9_PrivateDataEnd
